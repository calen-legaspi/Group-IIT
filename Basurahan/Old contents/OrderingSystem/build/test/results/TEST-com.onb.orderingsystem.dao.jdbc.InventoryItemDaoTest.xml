<?xml version="1.0" encoding="UTF-8" ?>
<testsuite errors="0" failures="0" hostname="Blacklock" name="com.onb.orderingsystem.dao.jdbc.InventoryItemDaoTest" tests="2" time="8.542" timestamp="2011-06-13T15:04:48">
  <properties>
    <property name="libs.jsp-compiler.javadoc" value="" />
    <property name="netbeans.autoupdate.country" value="US" />
    <property name="javac.test.classpath" value="..\Basurahan\mysql-connector-java-5.1.16\mysql-connector-java-5.1.16-bin.jar:..\Basurahan\dependencieslis\junit-3.8.2.jar:..\Basurahan\dependencieslis\junit-addons-1.4.jar:..\Basurahan\dependencieslis\junitperf-1.8.jar:..\Basurahan\dependencieslis\logback-classic-0.9.15.jar:..\Basurahan\dependencieslis\mmmockobjects-1.12.0.jar:..\Basurahan\dependencieslis\mockobjects-core-0.07.jar:..\Basurahan\dependencieslis\mockobjects-jdk1.3-0.07.jar:..\Basurahan\dependencieslis\poi-3.2-FINAL.jar:..\Basurahan\dependencieslis\slf4j-api-1.5.6.jar:..\Basurahan\dependencieslis\xercesImpl-2.6.2.jar:..\Basurahan\dependencieslis\xmlParserAPIs-2.6.2.jar:build/web/WEB-INF/classes:..\Basurahan\dependencieslis\slf4j-api-1.5.6.jar:../Basurahan/dbunit-2.4.8.jar:..\Basurahan\dependencieslis\junit-addons-1.4.jar:..\Basurahan\dependencieslis\junitperf-1.8.jar:..\Basurahan\dependencieslis\mmmockobjects-1.12.0.jar:..\Basurahan\dependencieslis\mockobjects-core-0.07.jar:..\Basurahan\dependencieslis\mockobjects-jdk1.3-0.07.jar:..\Basurahan\dependencieslis\poi-3.2-FINAL.jar:..\Basurahan\dependencieslis\xercesImpl-2.6.2.jar:..\Basurahan\dependencieslis\xmlParserAPIs-2.6.2.jar:..\Basurahan\dependencieslis\jcl-over-slf4j-1.5.6.jar:..\Basurahan\dependencieslis\logback-classic-0.9.15.jar:..\Basurahan\mysql-connector-java-5.1.16\mysql-connector-java-5.1.16-bin.jar:D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\commons-collections-3.2.1.jar:D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\commons-io-1.4.jar:D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\logback-core-0.9.15.jar:C:\Users\The Architect\.netbeans\7.0\modules\ext\junit-4.8.2.jar" />
    <property name="libs.jsf20.maven-pom" value="" />
    <property name="libs.DataBindingME.src" value="C:\Program Files\NetBeans 7.0\mobility\sources\netbeans_databindingme-src.zip" />
    <property name="libs.j2me_ant_ext.javadoc" value="" />
    <property name="source.root" value="src" />
    <property name="do.display.browser" value="true" />
    <property name="libs.junit.javadoc" value="C:\Users\The Architect\.netbeans\7.0\docs\junit-3.8.2-api.zip" />
    <property name="libs.nsicom-ant-utils.src" value="" />
    <property name="libs.nokiaS80-ant-utils.javadoc" value="" />
    <property name="ant.core.lib" value="C:\Program Files\NetBeans 7.0\java\ant\lib\ant.jar" />
    <property name="libs.swing-app-framework.src" value="" />
    <property name="libs.jakarta_slide_ant_webdav.javadoc" value="" />
    <property name="javadoc.windowtitle" value="" />
    <property name="libs.toplink.classpath" value="C:\Program Files\NetBeans 7.0\java\modules\ext\toplink\toplink-essentials.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\toplink\toplink-essentials-agent.jar" />
    <property name="libs.jsp-compilation.javadoc" value="" />
    <property name="user.dir" value="D:\Work Area\Projects\Git Repository\Group-IIT\OrderingSystem" />
    <property name="libs.hibernate-persistence.javadoc" value="" />
    <property name="libs.JMUnit4CLDC10.javadoc" value="C:\Program Files\NetBeans 7.0\mobility\modules\docs\jmunit-1.2.1-api.zip" />
    <property name="java.vm.version" value="16.3-b01" />
    <property name="libs.DataBindingME.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\netbeans_databindingme.jar" />
    <property name="libs.jstl11.maven-pom" value="" />
    <property name="libs.Java-EE-GlassFish-v3.wsimport" value="" />
    <property name="libs.nsicom-ant-utils.classpath" value="C:\Program Files\NetBeans 7.0\mobility\ant\nblib\org-netbeans-modules-j2me-cdc-project-nsicom.jar" />
    <property name="libs.MySQLDriver.classpath" value="C:\Program Files\NetBeans 7.0\ide\modules\ext\mysql-connector-java-5.1.13-bin.jar" />
    <property name="libs.eclipselinkmodelgen.src" value="" />
    <property name="libs.jstl11.src" value="" />
    <property name="javadoc.notree" value="false" />
    <property name="lib.dir" value="web/WEB-INF/lib" />
    <property name="netbeans.autoupdate.version" value="1.23" />
    <property name="libs.EclipseLink-GlassFish-v3.classpath" value="D:\Work Area\Servers\glassfish-3.1\glassfish\modules\org.eclipse.persistence.antlr.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\org.eclipse.persistence.asm.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\org.eclipse.persistence.core.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\org.eclipse.persistence.jpa.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\org.eclipse.persistence.jpa.modelgen.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\org.eclipse.persistence.oracle.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\javax.persistence.jar" />
    <property name="libs.javaee-web-api-6.0.classpath" value="C:\Program Files\NetBeans 7.0\enterprise\modules\ext\javaee-web-api-6.0.jar" />
    <property name="libs.DataBindingME-PIM.maven-pom" value="" />
    <property name="libs.hibernate-support.maven-pom" value="" />
    <property name="libs.hibernate-support.javadoc" value="" />
    <property name="libs.NetBeans MIDP Components.maven-pom" value="" />
    <property name="jdk.home" value="C:\Program Files\Java\jdk1.6.0_20" />
    <property name="libs.javac-api.src" value="" />
    <property name="javadoc.noindex" value="false" />
    <property name="sun.os.patch.level" value="" />
    <property name="do.tmp.war.package" value="true" />
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification" />
    <property name="libs.semc-ant-utils.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\org-netbeans-modules-j2me-cdc-project-semc.jar" />
    <property name="nb.show.statistics.ui" value="usageStatisticsEnabled" />
    <property name="libs.nokiadeployment.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\org-netbeans-modules-mobility-deployment-nokia.jar" />
    <property name="netbeans.autoupdate.variant" value="" />
    <property name="have.tests" value="true" />
    <property name="libs.nokiaS80-ant-utils.maven-pom" value="" />
    <property name="org.xml.sax.driver" value="com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser" />
    <property name="libs.nb_svg_midp_components.src" value="C:\Program Files\NetBeans 7.0\mobility\sources\nb_svg_midp_components-src.zip" />
    <property name="j2ee.server.instance" value="tomcat70:home=D:\Work Area\Servers\Apache Tomcat 7.0.11:base=apache-tomcat-7.0.11_base" />
    <property name="ant.file.type.OrderingSystem" value="file" />
    <property name="libs.NetBeans MIDP Components WMA.src" value="C:\Program Files\NetBeans 7.0\mobility\sources\netbeans_midp_components_wma-src.zip" />
    <property name="libs.javac-api.javadoc" value="" />
    <property name="os.name" value="Windows 7" />
    <property name="libs.beans-binding.classpath" value="C:\Program Files\NetBeans 7.0\java\modules\ext\beansbinding-1.2.1.jar" />
    <property name="ap.proc.none.internal" value="" />
    <property name="file.reference.mmmockobjects-1.12.0.jar" value="..\Basurahan\dependencieslis\mmmockobjects-1.12.0.jar" />
    <property name="libs.DataBindingME-SVG.javadoc" value="C:\Program Files\NetBeans 7.0\mobility\modules\docs\netbeans_databindingme_svg-api.zip" />
    <property name="file.reference.logback-classic-0.9.15.jar" value="..\Basurahan\dependencieslis\logback-classic-0.9.15.jar" />
    <property name="libs.restapi.javadoc" value="C:\Program Files\NetBeans 7.0\enterprise\docs\jsr311-api-1.1.1-javadoc.zip" />
    <property name="libs.JWSAntTasks.maven-pom" value="" />
    <property name="libs.ojec-ant-utils.src" value="" />
    <property name="libs.spring-webmvc3.0.src" value="" />
    <property name="libs.restapi.classpath" value="C:\Program Files\NetBeans 7.0\enterprise\modules\ext\rest\jsr311-api-1.1.1.jar" />
    <property name="runmain.jvmargs" value="" />
    <property name="java.vendor.url.bug" value="http://java.sun.com/cgi-bin/bugreport.cgi" />
    <property name="libs.nsicom-ant-utils.javadoc" value="" />
    <property name="libs.jaxb.maven-pom" value="" />
    <property name="os.arch" value="x86" />
    <property name="libs.eclipselink.src" value="" />
    <property name="user.name" value="The Architect" />
    <property name="j2ee.compile.on.save" value="true" />
    <property name="libs.jsf12.javadoc" value="C:\Program Files\NetBeans 7.0\enterprise\docs\javaee6-doc-api.zip" />
    <property name="libs.Comet-GlassFish-v3.javadoc" value="" />
    <property name="libs.spring-webmvc3.0.maven-pom" value="" />
    <property name="libs.swing-layout.maven-pom" value="" />
    <property name="build.classes.dir" value="build/web/WEB-INF/classes" />
    <property name="netbeans.accept_license_class" value="org.netbeans.license.AcceptLicense" />
    <property name="file.reference.commons-collections-3.2.1.jar" value="D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\commons-collections-3.2.1.jar" />
    <property name="libs.Java-EE-GlassFish-v3.wsjwsdp" value="" />
    <property name="ap.supported.internal" value="true" />
    <property name="libs.jaxws21.javadoc" value="C:\Program Files\NetBeans 7.0\java\docs\jaxws-api-doc.zip" />
    <property name="build.web.excludes" value="**/*.java,**/*.form" />
    <property name="includes" value="**" />
    <property name="file.reference.dbunit-2.4.8.jar" value="../Basurahan/dbunit-2.4.8.jar" />
    <property name="libs.ojec-ant-utils.maven-pom" value="" />
    <property name="user.country" value="US" />
    <property name="libs.jstl11.javadoc" value="C:\Program Files\NetBeans 7.0\enterprise\docs\javaee6-doc-api.zip" />
    <property name="libs.JMUnit4CLDC11.src" value="" />
    <property name="javadoc.encoding" value="UTF-8" />
    <property name="javac.classpath" value="..\Basurahan\mysql-connector-java-5.1.16\mysql-connector-java-5.1.16-bin.jar:..\Basurahan\dependencieslis\junit-3.8.2.jar:..\Basurahan\dependencieslis\junit-addons-1.4.jar:..\Basurahan\dependencieslis\junitperf-1.8.jar:..\Basurahan\dependencieslis\logback-classic-0.9.15.jar:..\Basurahan\dependencieslis\mmmockobjects-1.12.0.jar:..\Basurahan\dependencieslis\mockobjects-core-0.07.jar:..\Basurahan\dependencieslis\mockobjects-jdk1.3-0.07.jar:..\Basurahan\dependencieslis\poi-3.2-FINAL.jar:..\Basurahan\dependencieslis\slf4j-api-1.5.6.jar:..\Basurahan\dependencieslis\xercesImpl-2.6.2.jar:..\Basurahan\dependencieslis\xmlParserAPIs-2.6.2.jar" />
    <property name="libs.jsp-compilation-syscp.src" value="" />
    <property name="ant.file.type.OrderingSystem-impl" value="file" />
    <property name="do.debug.server" value="true" />
    <property name="debug-transport" value="dt_shmem" />
    <property name="file.reference.slf4j-api-1.5.6.jar" value="..\Basurahan\dependencieslis\slf4j-api-1.5.6.jar" />
    <property name="netbeans.home" value="C:\Program Files\NetBeans 7.0\platform" />
    <property name="build.compiler.emacs" value="true" />
    <property name="libs.javaee-web-api-6.0.src" value="" />
    <property name="libs.ejb3-persistence.src" value="" />
    <property name="libs.Java-EE-GlassFish-v3.javadoc" value="C:\Program Files\NetBeans 7.0\enterprise\docs\javaee6-doc-api.zip" />
    <property name="libs.jsp-compilation-syscp.classpath" value="C:\Program Files\NetBeans 7.0\java\ant\lib\ant.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\servlet3.0-jsp2.2-api.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\glassfish-jspparser-3.0.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\standard.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\jsf-2_0\jsf-impl.jar" />
    <property name="libs.nokiaS80-ant-utils.src" value="" />
    <property name="libs.cdc-pp-awt-layout.javadoc" value="" />
    <property name="libs.j2me_ant_ext.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\org-netbeans-modules-mobility-antext.jar;C:\Program Files\NetBeans 7.0\java\modules\org-netbeans-modules-classfile.jar" />
    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.6.0_20\jre\lib\endorsed" />
    <property name="libs.Comet-GlassFish-v3.maven-pom" value="" />
    <property name="libs.groovy-all.src" value="" />
    <property name="netbeans.dynamic.classpath" value="C:\Program Files\NetBeans 7.0\platform\core\core.jar;C:\Program Files\NetBeans 7.0\platform\core\org-openide-filesystems.jar;C:\Program Files\NetBeans 7.0\platform\core\locale\core_ja.jar;C:\Program Files\NetBeans 7.0\platform\core\locale\core_pt_BR.jar;C:\Program Files\NetBeans 7.0\platform\core\locale\core_ru.jar;C:\Program Files\NetBeans 7.0\platform\core\locale\core_zh_CN.jar;C:\Program Files\NetBeans 7.0\platform\core\locale\org-openide-filesystems_ja.jar;C:\Program Files\NetBeans 7.0\platform\core\locale\org-openide-filesystems_pt_BR.jar;C:\Program Files\NetBeans 7.0\platform\core\locale\org-openide-filesystems_ru.jar;C:\Program Files\NetBeans 7.0\platform\core\locale\org-openide-filesystems_zh_CN.jar;C:\Program Files\NetBeans 7.0\nb\core\org-netbeans-upgrader.jar;C:\Program Files\NetBeans 7.0\nb\core\locale\core_nb.jar;C:\Program Files\NetBeans 7.0\nb\core\locale\core_nb_ja.jar;C:\Program Files\NetBeans 7.0\nb\core\locale\core_nb_pt_BR.jar;C:\Program Files\NetBeans 7.0\nb\core\locale\core_nb_ru.jar;C:\Program Files\NetBeans 7.0\nb\core\locale\core_nb_zh_CN.jar;C:\Program Files\NetBeans 7.0\nb\core\locale\org-netbeans-upgrader_ja.jar;C:\Program Files\NetBeans 7.0\nb\core\locale\org-netbeans-upgrader_pt_BR.jar;C:\Program Files\NetBeans 7.0\nb\core\locale\org-netbeans-upgrader_ru.jar;C:\Program Files\NetBeans 7.0\nb\core\locale\org-netbeans-upgrader_zh_CN.jar" />
    <property name="libs.cdc-agui-swing-layout.maven-pom" value="" />
    <property name="libs.cdc-pp-awt-layout.src" value="C:\Program Files\NetBeans 7.0\mobility\sources\cdc-pp-awt-layout-src.zip" />
    <property name="java.vm.specification.version" value="1.0" />
    <property name="libs.jakarta_slide_ant_webdav.src" value="" />
    <property name="libs.primefaces.classpath" value="C:\Program Files\NetBeans 7.0\enterprise\modules\ext\primefaces\primefaces-2.2.1.jar" />
    <property name="libs.javaee-api-6.0.classpath" value="C:\Program Files\NetBeans 7.0\enterprise\modules\ext\javaee-api-6.0.jar" />
    <property name="libs.sjmc-ant-utils.maven-pom" value="" />
    <property name="libs.groovy-all.maven-pom" value="" />
    <property name="libs.JMUnit4CLDC10.maven-pom" value="" />
    <property name="libs.hibernate-persistence.classpath" value="C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\antlr-2.7.6.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\asm.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\asm-attrs.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\cglib-2.1.3.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\commons-collections-2.1.1.jar;C:\Program Files\NetBeans 7.0\ide\modules\ext\commons-logging-1.1.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\dom4j-1.6.1.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\ehcache-1.2.3.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\jdbc2_0-stdext.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\jta.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\hibernate3.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\hibernate-tools.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\hibernate-annotations.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\hibernate-commons-annotations.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\hibernate-entitymanager.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\javassist.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\ejb3-persistence.jar" />
    <property name="libs.jaxws21.src" value="" />
    <property name="do.war.package.with.custom.manifest" value="true" />
    <property name="libs.swing-app-framework.classpath" value="C:\Program Files\NetBeans 7.0\java\modules\ext\appframework-1.0.3.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\swing-worker-1.1.jar" />
    <property name="netbeans.autoupdate.language" value="en" />
    <property name="libs.jakarta_slide_ant_webdav.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\commons-httpclient-3.0.1.jar;C:\Program Files\NetBeans 7.0\ide\modules\ext\commons-logging-1.1.jar;C:\Program Files\NetBeans 7.0\mobility\modules\ext\jdom-1.0.jar;C:\Program Files\NetBeans 7.0\mobility\modules\ext\jakarta-slide-webdavlib-2.1.jar;C:\Program Files\NetBeans 7.0\mobility\modules\ext\jakarta-slide-ant-webdav-2.1.jar" />
    <property name="java.vendor" value="Sun Microsystems Inc." />
    <property name="libs.JMUnit4CLDC10.src" value="" />
    <property name="libs.javaee-api-6.0.javadoc" value="C:\Program Files\NetBeans 7.0\enterprise\docs\javaee6-doc-api.zip" />
    <property name="file.reference.commons-io-1.4.jar" value="D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\commons-io-1.4.jar" />
    <property name="javac.debug" value="true" />
    <property name="javadoc.splitindex" value="true" />
    <property name="file.separator" value="\" />
    <property name="libs.restlib_gfv3ee6.classpath" value="D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jackson-core-asl.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jackson-jaxrs.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jackson-mapper-asl.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jersey-client.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jersey-core.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jersey-gf-server.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jersey-json.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jersey-multipart.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jettison.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\mimepull.jar" />
    <property name="libs.ActiveSync.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\nbactivesync-5.0.jar" />
    <property name="libs.junit_4.maven-pom" value="" />
    <property name="resource.dir" value="setup" />
    <property name="javac.test.processorpath" value="..\Basurahan\mysql-connector-java-5.1.16\mysql-connector-java-5.1.16-bin.jar:..\Basurahan\dependencieslis\junit-3.8.2.jar:..\Basurahan\dependencieslis\junit-addons-1.4.jar:..\Basurahan\dependencieslis\junitperf-1.8.jar:..\Basurahan\dependencieslis\logback-classic-0.9.15.jar:..\Basurahan\dependencieslis\mmmockobjects-1.12.0.jar:..\Basurahan\dependencieslis\mockobjects-core-0.07.jar:..\Basurahan\dependencieslis\mockobjects-jdk1.3-0.07.jar:..\Basurahan\dependencieslis\poi-3.2-FINAL.jar:..\Basurahan\dependencieslis\slf4j-api-1.5.6.jar:..\Basurahan\dependencieslis\xercesImpl-2.6.2.jar:..\Basurahan\dependencieslis\xmlParserAPIs-2.6.2.jar:build/web/WEB-INF/classes:..\Basurahan\dependencieslis\slf4j-api-1.5.6.jar:../Basurahan/dbunit-2.4.8.jar:..\Basurahan\dependencieslis\junit-addons-1.4.jar:..\Basurahan\dependencieslis\junitperf-1.8.jar:..\Basurahan\dependencieslis\mmmockobjects-1.12.0.jar:..\Basurahan\dependencieslis\mockobjects-core-0.07.jar:..\Basurahan\dependencieslis\mockobjects-jdk1.3-0.07.jar:..\Basurahan\dependencieslis\poi-3.2-FINAL.jar:..\Basurahan\dependencieslis\xercesImpl-2.6.2.jar:..\Basurahan\dependencieslis\xmlParserAPIs-2.6.2.jar:..\Basurahan\dependencieslis\jcl-over-slf4j-1.5.6.jar:..\Basurahan\dependencieslis\logback-classic-0.9.15.jar:..\Basurahan\mysql-connector-java-5.1.16\mysql-connector-java-5.1.16-bin.jar:D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\commons-collections-3.2.1.jar:D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\commons-io-1.4.jar:D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\logback-core-0.9.15.jar:C:\Users\The Architect\.netbeans\7.0\modules\ext\junit-4.8.2.jar" />
    <property name="netbeans.buildnumber" value="201104080000" />
    <property name="libs.JWSAntTasks.javadoc" value="" />
    <property name="build.generated.sources.dir" value="build/generated-sources" />
    <property name="user.variant" value="" />
    <property name="libs.eclipselinkmodelgen.classpath" value="C:\Program Files\NetBeans 7.0\java\modules\ext\eclipselink\eclipselink-jpa-modelgen-2.2.0.jar" />
    <property name="libs.Java-EE-GlassFish-v3.wscompile" value="" />
    <property name="sun.java.launcher" value="SUN_STANDARD" />
    <property name="libs.junit.classpath" value="C:\Users\The Architect\.netbeans\7.0\modules\ext\junit-3.8.2.jar" />
    <property name="libs.jaxb.javadoc" value="C:\Program Files\NetBeans 7.0\ide\docs\jaxb-api-doc.zip" />
    <property name="libs.struts.classpath" value="C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\antlr-2.7.2.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\bsf-2.3.0.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\commons-beanutils-1.7.0.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\commons-chain-1.1.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\commons-digester-1.8.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\commons-fileupload-1.1.1.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\commons-io-1.1.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\commons-logging-1.0.4.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\commons-validator-1.3.1.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\jstl-1.0.2.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\oro-2.0.8.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\standard-1.0.2.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\struts-core-1.3.8.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\struts-el-1.3.8.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\struts-extras-1.3.8.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\struts-faces-1.3.8.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\struts-mailreader-dao-1.3.8.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\struts-scripting-1.3.8.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\struts-taglib-1.3.8.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\struts\struts-tiles-1.3.8.jar" />
    <property name="application.args.param" value="" />
    <property name="ant.home" value="C:\Program Files\NetBeans 7.0\java\ant" />
    <property name="libs.junit_4.src" value="C:\Users\The Architect\.netbeans\7.0\docs\junit-4.8.2-src.jar" />
    <property name="libs.ricoh-ant-utils.maven-pom" value="" />
    <property name="conf.dir" value="src/conf" />
    <property name="webinf.dir" value="web/WEB-INF" />
    <property name="libs.absolutelayout.maven-pom" value="" />
    <property name="ant.java.version" value="1.6" />
    <property name="java.library.path" value="C:\Program Files\Java\jdk1.6.0_20\jre\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Work Area\Servers\xampp\php;C:\grails-1.3.7\bin;C:\groovy-1.7.10\bin;C:\Program Files\Java\jdk1.6.0_20\bin;c:\Program Files\Microsoft SQL Server\100\Tools\Binn\;c:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files\MySQL\MySQL Server 5.5\bin;D:\Work Area\Servers\glassfish-3.1\bin;D:\Work Area\Servers\glassfish-3.1\glassfish\bin;C:\Windows\system32\gs\gs8.71\bin" />
    <property name="javadoc.author" value="false" />
    <property name="libs.metro.maven-pom" value="" />
    <property name="libs.EclipseLink-GlassFish-v3.src" value="" />
    <property name="java.util.logging.config.class" value="org.netbeans.core.startup.TopLogging" />
    <property name="libs.PostgreSQLDriver.src" value="" />
    <property name="sun.arch.data.model" value="32" />
    <property name="basedir" value="D:\Work Area\Projects\Git Repository\Group-IIT\OrderingSystem" />
    <property name="libs.ActiveSync.src" value="" />
    <property name="jar.compress" value="false" />
    <property name="libs.NetBeans MIDP Components PDA.src" value="C:\Program Files\NetBeans 7.0\mobility\sources\netbeans_midp_components_pda-src.zip" />
    <property name="libs.jstl11.classpath" value="C:\Program Files\NetBeans 7.0\enterprise\modules\ext\standard.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\jstl.jar" />
    <property name="path.separator" value=";" />
    <property name="dist.war" value="dist/OrderingSystem.war" />
    <property name="libs.javaee-web-api-6.0.javadoc" value="C:\Program Files\NetBeans 7.0\enterprise\docs\javaee6-doc-api.zip" />
    <property name="ant.junit.enabletestlistenerevents" value="true" />
    <property name="sun.io.unicode.encoding" value="UnicodeLittle" />
    <property name="libs.semc-ant-utils.javadoc" value="" />
    <property name="libs.jaxws21.classpath" value="C:\Program Files\NetBeans 7.0\ide\modules\ext\jaxb\jaxb-impl.jar;C:\Program Files\NetBeans 7.0\ide\modules\ext\jaxb\jaxb-xjc.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\jaxws22\FastInfoset.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\jaxws22\gmbal-api-only.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\jaxws22\http.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\jaxws22\jaxws-rt.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\jaxws22\jaxws-tools.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\jaxws22\management-api.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\jaxws22\mimepull.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\jaxws22\policy.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\jaxws22\saaj-impl.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\jaxws22\stax-ex.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\jaxws22\streambuffer.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\jaxws22\woodstox.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\jaxws22\api\jaxws-api.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\jaxws22\api\jsr181-api.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\jaxws22\api\jsr250-api.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\jaxws22\api\saaj-api.jar;C:\Program Files\NetBeans 7.0\ide\modules\ext\jaxb\activation.jar;C:\Program Files\NetBeans 7.0\ide\modules\ext\jaxb\api\jaxb-api.jar;C:\Program Files\NetBeans 7.0\ide\modules\ext\jaxb\api\jsr173_api.jar" />
    <property name="libs.struts.src" value="" />
    <property name="apple.awt.graphics.UseQuartz" value="true" />
    <property name="user.language" value="en" />
    <property name="j2ee.platform.classpath" value="D:/Work Area/Servers/Apache Tomcat 7.0.11/lib/annotations-api.jar:D:/Work Area/Servers/Apache Tomcat 7.0.11/lib/catalina-ant.jar:D:/Work Area/Servers/Apache Tomcat 7.0.11/lib/catalina-ha.jar:D:/Work Area/Servers/Apache Tomcat 7.0.11/lib/catalina-tribes.jar:D:/Work Area/Servers/Apache Tomcat 7.0.11/lib/catalina.jar:D:/Work Area/Servers/Apache Tomcat 7.0.11/lib/ecj-3.6.jar:D:/Work Area/Servers/Apache Tomcat 7.0.11/lib/el-api.jar:D:/Work Area/Servers/Apache Tomcat 7.0.11/lib/jasper-el.jar:D:/Work Area/Servers/Apache Tomcat 7.0.11/lib/jasper.jar:D:/Work Area/Servers/Apache Tomcat 7.0.11/lib/jsp-api.jar:D:/Work Area/Servers/Apache Tomcat 7.0.11/lib/servlet-api.jar:D:/Work Area/Servers/Apache Tomcat 7.0.11/lib/tomcat-api.jar:D:/Work Area/Servers/Apache Tomcat 7.0.11/lib/tomcat-coyote.jar:D:/Work Area/Servers/Apache Tomcat 7.0.11/lib/tomcat-dbcp.jar:D:/Work Area/Servers/Apache Tomcat 7.0.11/lib/tomcat-i18n-es.jar:D:/Work Area/Servers/Apache Tomcat 7.0.11/lib/tomcat-i18n-fr.jar:D:/Work Area/Servers/Apache Tomcat 7.0.11/lib/tomcat-i18n-ja.jar:D:/Work Area/Servers/Apache Tomcat 7.0.11/lib/tomcat-util.jar" />
    <property name="libs.spring-framework.classpath" value="C:\Program Files\NetBeans 7.0\ide\modules\ext\commons-logging-1.1.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\cglib-2.2.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring\spring-2.5.6.SEC01.jar" />
    <property name="libs.eclipselink.maven-pom" value="" />
    <property name="build.meta.inf.dir" value="build/web/META-INF" />
    <property name="persistence.xml.dir" value="src/conf" />
    <property name="libs.primefaces.javadoc" value="" />
    <property name="libs.spring-framework300.maven-pom" value="" />
    <property name="run.test.classpath" value="..\Basurahan\mysql-connector-java-5.1.16\mysql-connector-java-5.1.16-bin.jar:..\Basurahan\dependencieslis\junit-3.8.2.jar:..\Basurahan\dependencieslis\junit-addons-1.4.jar:..\Basurahan\dependencieslis\junitperf-1.8.jar:..\Basurahan\dependencieslis\logback-classic-0.9.15.jar:..\Basurahan\dependencieslis\mmmockobjects-1.12.0.jar:..\Basurahan\dependencieslis\mockobjects-core-0.07.jar:..\Basurahan\dependencieslis\mockobjects-jdk1.3-0.07.jar:..\Basurahan\dependencieslis\poi-3.2-FINAL.jar:..\Basurahan\dependencieslis\slf4j-api-1.5.6.jar:..\Basurahan\dependencieslis\xercesImpl-2.6.2.jar:..\Basurahan\dependencieslis\xmlParserAPIs-2.6.2.jar:build/web/WEB-INF/classes:..\Basurahan\dependencieslis\slf4j-api-1.5.6.jar:../Basurahan/dbunit-2.4.8.jar:..\Basurahan\dependencieslis\junit-addons-1.4.jar:..\Basurahan\dependencieslis\junitperf-1.8.jar:..\Basurahan\dependencieslis\mmmockobjects-1.12.0.jar:..\Basurahan\dependencieslis\mockobjects-core-0.07.jar:..\Basurahan\dependencieslis\mockobjects-jdk1.3-0.07.jar:..\Basurahan\dependencieslis\poi-3.2-FINAL.jar:..\Basurahan\dependencieslis\xercesImpl-2.6.2.jar:..\Basurahan\dependencieslis\xmlParserAPIs-2.6.2.jar:..\Basurahan\dependencieslis\jcl-over-slf4j-1.5.6.jar:..\Basurahan\dependencieslis\logback-classic-0.9.15.jar:..\Basurahan\mysql-connector-java-5.1.16\mysql-connector-java-5.1.16-bin.jar:D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\commons-collections-3.2.1.jar:D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\commons-io-1.4.jar:D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\logback-core-0.9.15.jar:C:\Users\The Architect\.netbeans\7.0\modules\ext\junit-4.8.2.jar:build/test/classes" />
    <property name="ant.project.invoked-targets" value="test" />
    <property name="useJavaUtilZip" value="true" />
    <property name="libs.swing-layout.javadoc" value="C:\Program Files\NetBeans 7.0\platform\docs\swing-layout-1.0.4-doc.zip" />
    <property name="libs.swing-app-framework.javadoc" value="C:\Program Files\NetBeans 7.0\java\docs\appframework-1.0.3-doc.zip" />
    <property name="libs.ejb3-persistence.maven-pom" value="" />
    <property name="jspc.schemas" value="/resources/schemas/" />
    <property name="libs.DataBindingME-SVG.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\netbeans_databindingme_svg.jar" />
    <property name="libs.PostgreSQLDriver.maven-pom" value="" />
    <property name="java.class.version" value="50.0" />
    <property name="libs.javaee-endorsed-api-6.0.src" value="" />
    <property name="libs.cdc-ant-utils.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\org-netbeans-modules-j2me-cdc-project.jar" />
    <property name="file.reference.xercesImpl-2.6.2.jar" value="..\Basurahan\dependencieslis\xercesImpl-2.6.2.jar" />
    <property name="netbeans.system_http_proxy" value="DIRECT" />
    <property name="libs.eclipselink.javadoc" value="" />
    <property name="libs.NetBeans MIDP Components WMA.maven-pom" value="" />
    <property name="libs.jsp-compilation.maven-pom" value="" />
    <property name="user.properties.file" value="C:\Users\The Architect\.netbeans\7.0\build.properties" />
    <property name="build.web.dir" value="build/web" />
    <property name="libs.spring-framework.src" value="" />
    <property name="libs.javac-api.maven-pom" value="" />
    <property name="file.encoding.pkg" value="sun.io" />
    <property name="sun.cpu.endian" value="little" />
    <property name="file.reference.logback-core-0.9.15.jar" value="D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\logback-core-0.9.15.jar" />
    <property name="libs.JWSAntTasks.classpath" value="C:\Program Files\NetBeans 7.0\java\ant\extra\org-netbeans-modules-javawebstart-anttasks.jar" />
    <property name="libs.spring-framework300.src" value="" />
    <property name="file.reference.junit-3.8.2.jar" value="..\Basurahan\dependencieslis\junit-3.8.2.jar" />
    <property name="libs.ant-contrib.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\ant-contrib-1.0b3.jar" />
    <property name="empty.dir" value="D:\Work Area\Projects\Git Repository\Group-IIT\OrderingSystem\build\empty" />
    <property name="display.browser" value="true" />
    <property name="version-output" value="java version &quot;1.6" />
    <property name="javadoc.preview" value="true" />
    <property name="file.reference.xmlParserAPIs-2.6.2.jar" value="..\Basurahan\dependencieslis\xmlParserAPIs-2.6.2.jar" />
    <property name="java.home" value="C:\Program Files\Java\jdk1.6.0_20\jre" />
    <property name="libs.ojec-ant-utils.javadoc" value="" />
    <property name="libs.jsp-compilation.src" value="" />
    <property name="libs.ricoh-ant-utils.src" value="" />
    <property name="libs.spring-webmvc.src" value="" />
    <property name="libs.ant-contrib.javadoc" value="" />
    <property name="ant.file.OrderingSystem-impl" value="D:\Work Area\Projects\Git Repository\Group-IIT\OrderingSystem\nbproject\build-impl.xml" />
    <property name="debug.test.classpath" value="..\Basurahan\mysql-connector-java-5.1.16\mysql-connector-java-5.1.16-bin.jar:..\Basurahan\dependencieslis\junit-3.8.2.jar:..\Basurahan\dependencieslis\junit-addons-1.4.jar:..\Basurahan\dependencieslis\junitperf-1.8.jar:..\Basurahan\dependencieslis\logback-classic-0.9.15.jar:..\Basurahan\dependencieslis\mmmockobjects-1.12.0.jar:..\Basurahan\dependencieslis\mockobjects-core-0.07.jar:..\Basurahan\dependencieslis\mockobjects-jdk1.3-0.07.jar:..\Basurahan\dependencieslis\poi-3.2-FINAL.jar:..\Basurahan\dependencieslis\slf4j-api-1.5.6.jar:..\Basurahan\dependencieslis\xercesImpl-2.6.2.jar:..\Basurahan\dependencieslis\xmlParserAPIs-2.6.2.jar:build/web/WEB-INF/classes:..\Basurahan\dependencieslis\slf4j-api-1.5.6.jar:../Basurahan/dbunit-2.4.8.jar:..\Basurahan\dependencieslis\junit-addons-1.4.jar:..\Basurahan\dependencieslis\junitperf-1.8.jar:..\Basurahan\dependencieslis\mmmockobjects-1.12.0.jar:..\Basurahan\dependencieslis\mockobjects-core-0.07.jar:..\Basurahan\dependencieslis\mockobjects-jdk1.3-0.07.jar:..\Basurahan\dependencieslis\poi-3.2-FINAL.jar:..\Basurahan\dependencieslis\xercesImpl-2.6.2.jar:..\Basurahan\dependencieslis\xmlParserAPIs-2.6.2.jar:..\Basurahan\dependencieslis\jcl-over-slf4j-1.5.6.jar:..\Basurahan\dependencieslis\logback-classic-0.9.15.jar:..\Basurahan\mysql-connector-java-5.1.16\mysql-connector-java-5.1.16-bin.jar:D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\commons-collections-3.2.1.jar:D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\commons-io-1.4.jar:D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\logback-core-0.9.15.jar:C:\Users\The Architect\.netbeans\7.0\modules\ext\junit-4.8.2.jar:build/test/classes" />
    <property name="libs.javaee-endorsed-api-6.0.classpath" value="C:\Program Files\NetBeans 7.0\enterprise\modules\ext\javaee6-endorsed\javax.annotation.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\javaee6-endorsed\jaxb-api-osgi.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\javaee6-endorsed\webservices-api-osgi.jar" />
    <property name="libs.javaee-api-6.0.src" value="" />
    <property name="netbeans.importclass" value="org.netbeans.upgrade.AutoUpgrade" />
    <property name="ant.project.default-target" value="default" />
    <property name="annotation.processing.run.all.processors" value="true" />
    <property name="libs.savaje-ant-utils.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\org-netbeans-modules-j2me-cdc-project-savaje.jar" />
    <property name="libs.toplink.maven-pom" value="" />
    <property name="libs.DataBindingME.maven-pom" value="" />
    <property name="libs.PostgreSQLDriver.javadoc" value="" />
    <property name="libs.restlib.classpath" value="C:\Program Files\NetBeans 7.0\enterprise\modules\ext\rest\asm-3.1.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\rest\jackson-core-asl-1.1.1.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\rest\jersey-client-1.3.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\rest\jersey-core-1.3.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\rest\jersey-json-1.3.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\rest\jersey-multipart-1.3.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\rest\jersey-server-1.3.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\rest\jersey-spring-1.3.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\rest\jettison-1.1.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\rest\mimepull-1.4.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\rest\oauth-client-1.3.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\rest\oauth-signature-1.3.jar;C:\Program Files\NetBeans 7.0\ide\modules\ext\jaxb\activation.jar;C:\Program Files\NetBeans 7.0\ide\modules\ext\jaxb\api\jaxb-api.jar;C:\Program Files\NetBeans 7.0\ide\modules\ext\jaxb\api\jsr173_api.jar" />
    <property name="libs.JMUnit4CLDC11.javadoc" value="C:\Program Files\NetBeans 7.0\mobility\modules\docs\jmunit-1.2.1-api.zip" />
    <property name="libs.nsicom-ant-utils.maven-pom" value="" />
    <property name="libs.MySQLDriver.maven-pom" value="" />
    <property name="libs.savaje-ant-utils.src" value="" />
    <property name="libs.junit_4.javadoc" value="C:\Users\The Architect\.netbeans\7.0\docs\junit-4.8.2-api.zip" />
    <property name="libs.spring-webmvc.javadoc" value="" />
    <property name="libs.toplink.src" value="" />
    <property name="libs.EclipseLink-GlassFish-v3.maven-pom" value="" />
    <property name="libs.javaee-web-api-6.0.maven-pom" value="" />
    <property name="libs.cdc-pp-awt-layout.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\cdc-pp-awt-layout.jar" />
    <property name="j2ee.deploy.on.save" value="true" />
    <property name="libs.cdc-agui-swing-layout.src" value="C:\Program Files\NetBeans 7.0\mobility\sources\cdc-agui-swing-layout-src.zip" />
    <property name="libs.hibernate-support.src" value="" />
    <property name="libs.javaee-endorsed-api-6.0.javadoc" value="C:\Program Files\NetBeans 7.0\enterprise\docs\javaee6-doc-api.zip" />
    <property name="libs.JMUnit4CLDC11.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\jmunit4cldc11-1.2.1.jar" />
    <property name="libs.nb_svg_midp_components.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\nb_svg_midp_components.jar" />
    <property name="libs.spring-webmvc3.0.javadoc" value="" />
    <property name="annotation.processing.enabled.in.editor" value="true" />
    <property name="libs.NetBeans MIDP Components PDA.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\netbeans_midp_components_pda.jar" />
    <property name="libs.semc-ant-utils.maven-pom" value="" />
    <property name="file.reference.mockobjects-jdk1.3-0.07.jar" value="..\Basurahan\dependencieslis\mockobjects-jdk1.3-0.07.jar" />
    <property name="libs.nokiadeployment.maven-pom" value="" />
    <property name="libs.restapi.src" value="" />
    <property name="libs.NetBeans MIDP Components.javadoc" value="C:\Program Files\NetBeans 7.0\mobility\modules\docs\netbeans_midp_components_basic-api.zip" />
    <property name="sun.management.compiler" value="HotSpot Client Compiler" />
    <property name="javac.deprecation" value="false" />
    <property name="javadoc.use" value="true" />
    <property name="client.urlPart" value="" />
    <property name="sun.java2d.noddraw" value="true" />
    <property name="libs.jsp-compiler.classpath" value="C:\Program Files\NetBeans 7.0\enterprise\ant\extra\jspcompile.jar" />
    <property name="dist.ear.war" value="dist/OrderingSystem.war" />
    <property name="javac.processorpath" value="..\Basurahan\mysql-connector-java-5.1.16\mysql-connector-java-5.1.16-bin.jar:..\Basurahan\dependencieslis\junit-3.8.2.jar:..\Basurahan\dependencieslis\junit-addons-1.4.jar:..\Basurahan\dependencieslis\junitperf-1.8.jar:..\Basurahan\dependencieslis\logback-classic-0.9.15.jar:..\Basurahan\dependencieslis\mmmockobjects-1.12.0.jar:..\Basurahan\dependencieslis\mockobjects-core-0.07.jar:..\Basurahan\dependencieslis\mockobjects-jdk1.3-0.07.jar:..\Basurahan\dependencieslis\poi-3.2-FINAL.jar:..\Basurahan\dependencieslis\slf4j-api-1.5.6.jar:..\Basurahan\dependencieslis\xercesImpl-2.6.2.jar:..\Basurahan\dependencieslis\xmlParserAPIs-2.6.2.jar" />
    <property name="libs.spring-webmvc.classpath" value="C:\Program Files\NetBeans 7.0\enterprise\modules\ext\spring\spring-webmvc-2.5.6.SEC01.jar" />
    <property name="javac.compilerargs" value="" />
    <property name="ant.file" value="D:\Work Area\Projects\Git Repository\Group-IIT\OrderingSystem\build.xml" />
    <property name="libs.beans-binding.maven-pom" value="" />
    <property name="file.reference.mockobjects-core-0.07.jar" value="..\Basurahan\dependencieslis\mockobjects-core-0.07.jar" />
    <property name="libs.jsf12.classpath" value="C:\Program Files\NetBeans 7.0\enterprise\modules\ext\jsf-1_2\commons-beanutils.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\jsf-1_2\commons-collections.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\jsf-1_2\commons-digester.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\jsf-1_2\commons-logging.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\jsf-1_2\jsf-api.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\jsf-1_2\jsf-impl.jar" />
    <property name="sun.awt.exception.handler" value="org.netbeans.core.startup.TopLogging$AWTHandler" />
    <property name="has.custom.manifest" value="true" />
    <property name="libs.restapi.maven-pom" value="" />
    <property name="libs.beans-binding.src" value="" />
    <property name="libs.NetBeans MIDP Components PDA.javadoc" value="C:\Program Files\NetBeans 7.0\mobility\modules\docs\netbeans_midp_components_pda-api.zip" />
    <property name="java.vm.specification.vendor" value="Sun Microsystems Inc." />
    <property name="libs.DataBindingME-PIM.javadoc" value="C:\Program Files\NetBeans 7.0\mobility\modules\docs\netbeans_databindingme_pim-api.zip" />
    <property name="libs.swing-layout.src" value="C:\Program Files\NetBeans 7.0\platform\docs\swing-layout-1.0.4-src.zip" />
    <property name="libs.Java-EE-GlassFish-v3.embedabbleejb" value="" />
    <property name="libs.j2me_ant_ext.src" value="" />
    <property name="org.openide.major.version" value="IDE/1" />
    <property name="java.vm.name" value="Java HotSpot(TM) Client VM" />
    <property name="do.display.browser.debug" value="true" />
    <property name="netbeans.user" value="C:\Users\The Architect\.netbeans\7.0" />
    <property name="javadoc.additionalparam" value="" />
    <property name="libs.ricoh-ant-utils.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\org-netbeans-modules-j2me-cdc-project-ricoh.jar;C:\Program Files\NetBeans 7.0\mobility\modules\ext\RicohAntTasks-2.0.jar;C:\Program Files\NetBeans 7.0\mobility\modules\ext\commons-httpclient-3.0.jar;C:\Program Files\NetBeans 7.0\ide\modules\ext\commons-logging-1.1.jar;C:\Program Files\NetBeans 7.0\mobility\modules\ext\commons-codec-1.3.jar" />
    <property name="java.vendor.url" value="http://java.sun.com/" />
    <property name="java.io.tmpdir" value="C:\Users\THEARC~1\AppData\Local\Temp\" />
    <property name="endorsed.classpath.cmd.line.arg" value="-Xbootclasspath/p:&apos;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\javaee6-endorsed\javax.annotation.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\javaee6-endorsed\jaxb-api-osgi.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\javaee6-endorsed\webservices-api-osgi.jar&apos;" />
    <property name="compile.jsps" value="false" />
    <property name="libs.jsp-compiler.src" value="" />
    <property name="file.reference.poi-3.2-FINAL.jar" value="..\Basurahan\dependencieslis\poi-3.2-FINAL.jar" />
    <property name="deploy.ant.properties.file" value="C:\Users\The Architect\.netbeans\7.0\tomcat70_1.properties" />
    <property name="file.reference.jcl-over-slf4j-1.5.6.jar" value="..\Basurahan\dependencieslis\jcl-over-slf4j-1.5.6.jar" />
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.6.0_20\jre\bin" />
    <property name="have.sources" value="true" />
    <property name="war.name" value="OrderingSystem.war" />
    <property name="debug.classpath" value="build/web/WEB-INF/classes:..\Basurahan\mysql-connector-java-5.1.16\mysql-connector-java-5.1.16-bin.jar:..\Basurahan\dependencieslis\junit-3.8.2.jar:..\Basurahan\dependencieslis\junit-addons-1.4.jar:..\Basurahan\dependencieslis\junitperf-1.8.jar:..\Basurahan\dependencieslis\logback-classic-0.9.15.jar:..\Basurahan\dependencieslis\mmmockobjects-1.12.0.jar:..\Basurahan\dependencieslis\mockobjects-core-0.07.jar:..\Basurahan\dependencieslis\mockobjects-jdk1.3-0.07.jar:..\Basurahan\dependencieslis\poi-3.2-FINAL.jar:..\Basurahan\dependencieslis\slf4j-api-1.5.6.jar:..\Basurahan\dependencieslis\xercesImpl-2.6.2.jar:..\Basurahan\dependencieslis\xmlParserAPIs-2.6.2.jar" />
    <property name="javadoc.private" value="false" />
    <property name="test.src.dir" value="test" />
    <property name="libs.jsf20.classpath" value="C:\Program Files\NetBeans 7.0\enterprise\modules\ext\jsf-2_0\jsf-api.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\jsf-2_0\jsf-impl.jar" />
    <property name="ap.processors.internal" value="" />
    <property name="javadoc.encoding.used" value="UTF-8" />
    <property name="libs.DataBindingME-SVG.src" value="C:\Program Files\NetBeans 7.0\mobility\sources\netbeans_databindingme_svg-src.zip" />
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment" />
    <property name="ant.project.name" value="OrderingSystem" />
    <property name="netbeans.hash.code" value="unique=NB_GFMOD_GROOVY_JAVA_JC_MOB_TOMCAT_WEBEE045a3657f-0608-46f4-b376-f01797437efc_54fe8de4-7bc4-4845-9d2e-640b52646caf" />
    <property name="libs.jsp-compilation-syscp.maven-pom" value="" />
    <property name="libs.j2me_ant_ext.maven-pom" value="" />
    <property name="sun.cpu.isalist" value="pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86" />
    <property name="libs.CopyLibs.javadoc" value="" />
    <property name="j2ee.server.domain" value="C:/Users/The Architect/.netbeans/7.0/apache-tomcat-7.0.11_base" />
    <property name="libs.ActiveSync.javadoc" value="" />
    <property name="org.openide.specification.version" value="6.2" />
    <property name="j2ee.server.home" value="D:/Work Area/Servers/Apache Tomcat 7.0.11" />
    <property name="libs.hibernate-support.classpath" value="C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\antlr-2.7.6.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\asm.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\asm-attrs.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\cglib-2.1.3.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\commons-collections-2.1.1.jar;C:\Program Files\NetBeans 7.0\ide\modules\ext\commons-logging-1.1.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\dom4j-1.6.1.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\ehcache-1.2.3.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\jdbc2_0-stdext.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\jta.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\hibernate3.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\hibernate-tools.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\hibernate-annotations.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\hibernate-commons-annotations.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\hibernate-entitymanager.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\javassist.jar" />
    <property name="libs.DataBindingME-PIM.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\netbeans_databindingme_pim.jar" />
    <property name="user.home" value="C:\Users\The Architect" />
    <property name="annotation.processing.processors.list" value="" />
    <property name="debug-args-line" value="-Xdebug" />
    <property name="libs.primefaces.maven-pom" value="" />
    <property name="libs.NetBeans MIDP Components.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\netbeans_midp_components_basic.jar" />
    <property name="libs.javaee-api-6.0.maven-pom" value="" />
    <property name="libs.JWSAntTasks.src" value="" />
    <property name="libs.CopyLibs.maven-pom" value="" />
    <property name="libs.absolutelayout.javadoc" value="" />
    <property name="libs.hibernate-persistence.maven-pom" value="" />
    <property name="libs.spring-framework300.javadoc" value="" />
    <property name="java.specification.name" value="Java Platform API Specification" />
    <property name="file.reference.junit-addons-1.4.jar" value="..\Basurahan\dependencieslis\junit-addons-1.4.jar" />
    <property name="libs.swing-app-framework.maven-pom" value="" />
    <property name="no.dist.ear.dir" value="true" />
    <property name="libs.NetBeans MIDP Components WMA.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\netbeans_midp_components_wma.jar" />
    <property name="libs.jakarta_slide_ant_webdav.maven-pom" value="" />
    <property name="libs.sjmc-ant-utils.src" value="" />
    <property name="libs.cdc-agui-swing-layout.javadoc" value="" />
    <property name="java.specification.vendor" value="Sun Microsystems Inc." />
    <property name="libs.javac-api.classpath" value="C:\Program Files\NetBeans 7.0\java\modules\ext\javac-api-nb-7.0-b07.jar" />
    <property name="java.version" value="1.6.0_20" />
    <property name="libs.nokiaS80-ant-utils.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\org-netbeans-modules-j2me-cdc-project-nokiaS80.jar" />
    <property name="javadoc.version" value="false" />
    <property name="libs.NetBeans MIDP Components WMA.javadoc" value="C:\Program Files\NetBeans 7.0\mobility\modules\docs\netbeans_midp_components_wma-api.zip" />
    <property name="libs.MySQLDriver.javadoc" value="" />
    <property name="org.openide.version" value="deprecated" />
    <property name="libs.restlib_gfv3ee6.maven-pom" value="" />
    <property name="source.encoding" value="UTF-8" />
    <property name="libs.ActiveSync.maven-pom" value="" />
    <property name="ap.cmd.line.internal" value="" />
    <property name="libs.eclipselinkmodelgen.maven-pom" value="" />
    <property name="file.reference.junitperf-1.8.jar" value="..\Basurahan\dependencieslis\junitperf-1.8.jar" />
    <property name="libs.jsp-compilation-syscp.javadoc" value="" />
    <property name="libs.junit.maven-pom" value="" />
    <property name="libs.eclipselinkmodelgen.javadoc" value="" />
    <property name="libs.metro.javadoc" value="C:\Program Files\NetBeans 7.0\enterprise\docs\metro-1.4-doc.zip" />
    <property name="libs.struts.maven-pom" value="" />
    <property name="ant.file.OrderingSystem" value="D:\Work Area\Projects\Git Repository\Group-IIT\OrderingSystem\build.xml" />
    <property name="netbeans.home+have.tests" value="true" />
    <property name="libs.jaxb.src" value="" />
    <property name="libs.Java-EE-GlassFish-v3.wsgenerate" value="" />
    <property name="libs.cdc-ant-utils.src" value="" />
    <property name="libs.jaxb.classpath" value="C:\Program Files\NetBeans 7.0\ide\modules\ext\jaxb\jaxb-impl.jar;C:\Program Files\NetBeans 7.0\ide\modules\ext\jaxb\jaxb-xjc.jar;C:\Program Files\NetBeans 7.0\ide\modules\ext\jaxb\jaxb1-impl.jar;C:\Program Files\NetBeans 7.0\ide\modules\ext\jaxb\activation.jar;C:\Program Files\NetBeans 7.0\ide\modules\ext\jaxb\api\jaxb-api.jar;C:\Program Files\NetBeans 7.0\ide\modules\ext\jaxb\api\jsr173_api.jar" />
    <property name="dist.javadoc.dir" value="dist/javadoc" />
    <property name="libs.spring-webmvc3.0.classpath" value="C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-webmvc-3.0.2.RELEASE.jar" />
    <property name="libs.swing-layout.classpath" value="C:\Program Files\NetBeans 7.0\platform\modules\ext\swing-layout-1.0.4.jar" />
    <property name="jspc.dtds" value="/resources/dtds/" />
    <property name="libs.restlib.src" value="" />
    <property name="javac.source" value="1.6" />
    <property name="build.generated.dir" value="build/generated" />
    <property name="line.separator" value="&#xd;&#xa;" />
    <property name="libs.hibernate-persistence.src" value="" />
    <property name="libs.nb_svg_midp_components.javadoc" value="C:\Program Files\NetBeans 7.0\mobility\modules\docs\nb_svg_midp_components-api.zip" />
    <property name="java.specification.version" value="1.6" />
    <property name="libs.jaxws21.maven-pom" value="" />
    <property name="java.vm.info" value="mixed mode" />
    <property name="libs.cdc-ant-utils.javadoc" value="" />
    <property name="libs.ojec-ant-utils.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\org-netbeans-modules-j2me-cdc-project-ojec.jar" />
    <property name="libs.spring-framework.maven-pom" value="" />
    <property name="sun.boot.class.path" value="C:\Program Files\NetBeans 7.0\enterprise\modules\ext\javaee6-endorsed\javax.annotation.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\javaee6-endorsed\jaxb-api-osgi.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\javaee6-endorsed\webservices-api-osgi.jar;C:\Program Files\Java\jdk1.6.0_20\jre\lib\resources.jar;C:\Program Files\Java\jdk1.6.0_20\jre\lib\rt.jar;C:\Program Files\Java\jdk1.6.0_20\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.6.0_20\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.6.0_20\jre\lib\jce.jar;C:\Program Files\Java\jdk1.6.0_20\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.6.0_20\jre\classes" />
    <property name="javac.target" value="1.6" />
    <property name="build.test.classes.dir" value="build/test/classes" />
    <property name="src.dir" value="src/java" />
    <property name="annotation.processing.enabled" value="true" />
    <property name="sun.awt.keepWorkingSetOnMinimize" value="true" />
    <property name="libs.jsf20.src" value="" />
    <property name="libs.jsf12.src" value="" />
    <property name="libs.DataBindingME-SVG.maven-pom" value="" />
    <property name="j2ee.platform" value="1.6-web" />
    <property name="libs.nokiadeployment.src" value="" />
    <property name="libs.savaje-ant-utils.javadoc" value="" />
    <property name="libs.struts.javadoc" value="C:\Program Files\NetBeans 7.0\enterprise\docs\struts-1.3.8-javadoc.zip" />
    <property name="ignore.failing.tests" value="true" />
    <property name="libs.cdc-ant-utils.maven-pom" value="" />
    <property name="libs.Comet-GlassFish-v3.classpath" value="D:\Work Area\Servers\glassfish-3.1\glassfish\modules\grizzly-comet.jar" />
    <property name="web.docbase.dir" value="web" />
    <property name="libs.restlib_gfv3ee6.javadoc" value="C:\Program Files\NetBeans 7.0\enterprise\docs\jsr311-api-1.1.1-javadoc.zip;C:\Program Files\NetBeans 7.0\enterprise\docs\jersey-client-1.3-javadoc.zip;C:\Program Files\NetBeans 7.0\enterprise\docs\jersey-json-1.3-javadoc.zip;C:\Program Files\NetBeans 7.0\enterprise\docs\jersey-multipart-1.3-javadoc.zip" />
    <property name="libs.primefaces.src" value="" />
    <property name="libs.cdc-agui-swing-layout.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\cdc-agui-swing-layout.jar" />
    <property name="file.reference.mysql-connector-java-5.1.16-bin.jar" value="..\Basurahan\mysql-connector-java-5.1.16\mysql-connector-java-5.1.16-bin.jar" />
    <property name="dist.dir" value="dist" />
    <property name="libs.groovy-all.javadoc" value="" />
    <property name="javac.fork" value="true" />
    <property name="libs.sjmc-ant-utils.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\org-netbeans-modules-j2me-cdc-project-sjmc.jar" />
    <property name="libs.groovy-all.classpath" value="C:\Program Files\NetBeans 7.0\groovy\modules\ext\groovy-all.jar" />
    <property name="libs.JMUnit4CLDC10.classpath" value="C:\Program Files\NetBeans 7.0\mobility\modules\ext\jmunit4cldc10-1.2.1.jar" />
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob" />
    <property name="default.javac.source" value="1.6" />
    <property name="debug-transport-by-os" value="dt_shmem" />
    <property name="libs.MySQLDriver.src" value="" />
    <property name="sun.jnu.encoding" value="Cp1252" />
    <property name="libs.ant-contrib.maven-pom" value="" />
    <property name="libs.nokiadeployment.javadoc" value="" />
    <property name="build.test.results.dir" value="build/test/results" />
    <property name="java.runtime.version" value="1.6.0_20-b02" />
    <property name="libs.ejb3-persistence.javadoc" value="" />
    <property name="libs.NetBeans MIDP Components.src" value="C:\Program Files\NetBeans 7.0\mobility\sources\netbeans_midp_components_basic-src.zip" />
    <property name="libs.sjmc-ant-utils.javadoc" value="" />
    <property name="do.tmp.war.package.with.custom.manifest" value="true" />
    <property name="default.javac.target" value="1.6" />
    <property name="libs.Java-EE-GlassFish-v3.src" value="" />
    <property name="libs.junit_4.classpath" value="C:\Users\The Architect\.netbeans\7.0\modules\ext\junit-4.8.2.jar" />
    <property name="user.timezone" value="" />
    <property name="libs.ant-contrib.src" value="" />
    <property name="libs.javaee-endorsed-api-6.0.maven-pom" value="" />
    <property name="netbeans.dirs" value="C:\Program Files\NetBeans 7.0\nb;C:\Program Files\NetBeans 7.0\ergonomics;C:\Program Files\NetBeans 7.0\ide;C:\Program Files\NetBeans 7.0\java;C:\Program Files\NetBeans 7.0\xml;C:\Program Files\NetBeans 7.0\apisupport;C:\Program Files\NetBeans 7.0\webcommon;C:\Program Files\NetBeans 7.0\websvccommon;C:\Program Files\NetBeans 7.0\enterprise;C:\Program Files\NetBeans 7.0\mobility;C:\Program Files\NetBeans 7.0\profiler;C:\Program Files\NetBeans 7.0\ruby;C:\Program Files\NetBeans 7.0\python;C:\Program Files\NetBeans 7.0\php;C:\Program Files\NetBeans 7.0\visualweb;C:\Program Files\NetBeans 7.0\soa;C:\Program Files\NetBeans 7.0\identity;C:\Program Files\NetBeans 7.0\uml;C:\Program Files\NetBeans 7.0\harness;C:\Program Files\NetBeans 7.0\cnd;C:\Program Files\NetBeans 7.0\dlight;C:\Program Files\NetBeans 7.0\groovy;C:\Program Files\NetBeans 7.0\extra;C:\Program Files\NetBeans 7.0\javafx;C:\Program Files\NetBeans 7.0\javacard" />
    <property name="libs.jsf20.javadoc" value="C:\Program Files\NetBeans 7.0\enterprise\docs\javaee6-doc-api.zip" />
    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.6.0_20\jre\lib\ext;C:\Windows\Sun\Java\lib\ext" />
    <property name="libs.restlib_gfv3ee6.src" value="" />
    <property name="libs.metro.src" value="" />
    <property name="endorsed.classpath" value="C:\Program Files\NetBeans 7.0\enterprise\modules\ext\javaee6-endorsed\javax.annotation.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\javaee6-endorsed\jaxb-api-osgi.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\javaee6-endorsed\webservices-api-osgi.jar" />
    <property name="libs.semc-ant-utils.src" value="" />
    <property name="libs.savaje-ant-utils.maven-pom" value="" />
    <property name="libs.absolutelayout.classpath" value="C:\Program Files\NetBeans 7.0\java\modules\ext\AbsoluteLayout.jar" />
    <property name="excludes" value="" />
    <property name="libs.metro.classpath" value="C:\Program Files\NetBeans 7.0\ide\modules\ext\jaxb\activation.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\metro\webservices-api.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\metro\webservices-extra-api.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\metro\webservices-extra.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\metro\webservices-rt.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\metro\webservices-tools.jar" />
    <property name="libs.restlib.maven-pom" value="" />
    <property name="libs.DataBindingME.javadoc" value="C:\Program Files\NetBeans 7.0\mobility\modules\docs\netbeans_databindingme-api.zip" />
    <property name="java.class.path" value="D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\mysql-connector-java-5.1.16\mysql-connector-java-5.1.16-bin.jar;D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\junit-3.8.2.jar;D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\junit-addons-1.4.jar;D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\junitperf-1.8.jar;D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\logback-classic-0.9.15.jar;D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\mmmockobjects-1.12.0.jar;D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\mockobjects-core-0.07.jar;D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\mockobjects-jdk1.3-0.07.jar;D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\poi-3.2-FINAL.jar;D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\slf4j-api-1.5.6.jar;D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\xercesImpl-2.6.2.jar;D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\xmlParserAPIs-2.6.2.jar;D:\Work Area\Projects\Git Repository\Group-IIT\OrderingSystem\build\web\WEB-INF\classes;D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dbunit-2.4.8.jar;D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\jcl-over-slf4j-1.5.6.jar;D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\commons-collections-3.2.1.jar;D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\commons-io-1.4.jar;D:\Work Area\Projects\Git Repository\Group-IIT\Basurahan\dependencieslis\logback-core-0.9.15.jar;C:\Users\The Architect\.netbeans\7.0\modules\ext\junit-4.8.2.jar;D:\Work Area\Projects\Git Repository\Group-IIT\OrderingSystem\build\test\classes;D:\Work Area\Servers\Apache Tomcat 7.0.11\lib\annotations-api.jar;D:\Work Area\Servers\Apache Tomcat 7.0.11\lib\catalina-ant.jar;D:\Work Area\Servers\Apache Tomcat 7.0.11\lib\catalina-ha.jar;D:\Work Area\Servers\Apache Tomcat 7.0.11\lib\catalina-tribes.jar;D:\Work Area\Servers\Apache Tomcat 7.0.11\lib\catalina.jar;D:\Work Area\Servers\Apache Tomcat 7.0.11\lib\ecj-3.6.jar;D:\Work Area\Servers\Apache Tomcat 7.0.11\lib\el-api.jar;D:\Work Area\Servers\Apache Tomcat 7.0.11\lib\jasper-el.jar;D:\Work Area\Servers\Apache Tomcat 7.0.11\lib\jasper.jar;D:\Work Area\Servers\Apache Tomcat 7.0.11\lib\jsp-api.jar;D:\Work Area\Servers\Apache Tomcat 7.0.11\lib\servlet-api.jar;D:\Work Area\Servers\Apache Tomcat 7.0.11\lib\tomcat-api.jar;D:\Work Area\Servers\Apache Tomcat 7.0.11\lib\tomcat-coyote.jar;D:\Work Area\Servers\Apache Tomcat 7.0.11\lib\tomcat-dbcp.jar;D:\Work Area\Servers\Apache Tomcat 7.0.11\lib\tomcat-i18n-es.jar;D:\Work Area\Servers\Apache Tomcat 7.0.11\lib\tomcat-i18n-fr.jar;D:\Work Area\Servers\Apache Tomcat 7.0.11\lib\tomcat-i18n-ja.jar;D:\Work Area\Servers\Apache Tomcat 7.0.11\lib\tomcat-util.jar;C:\Program Files\NetBeans 7.0\java\ant\lib\ant-launcher.jar;C:\Program Files\NetBeans 7.0\java\ant\lib\ant.jar;C:\Program Files\NetBeans 7.0\java\ant\lib\ant-junit.jar;C:\Program Files\NetBeans 7.0\java\ant\lib\ant-junit4.jar" />
    <property name="apple.laf.useScreenMenuBar" value="true" />
    <property name="libs.absolutelayout.src" value="" />
    <property name="j2ee.server.type" value="Tomcat70" />
    <property name="libs.cdc-pp-awt-layout.maven-pom" value="" />
    <property name="os.version" value="6.1" />
    <property name="libs.EclipseLink-GlassFish-v3.javadoc" value="C:\Program Files\NetBeans 7.0\enterprise\docs\javaee6-doc-api.zip" />
    <property name="libs.JMUnit4CLDC11.maven-pom" value="" />
    <property name="libs.toplink.javadoc" value="" />
    <property name="sun.desktop" value="windows" />
    <property name="libs.nb_svg_midp_components.maven-pom" value="" />
    <property name="libs.ricoh-ant-utils.javadoc" value="" />
    <property name="libs.Comet-GlassFish-v3.src" value="" />
    <property name="libs.restlib.javadoc" value="C:\Program Files\NetBeans 7.0\enterprise\docs\jersey-client-1.3-javadoc.zip;C:\Program Files\NetBeans 7.0\enterprise\docs\jersey-core-1.1.5.1-javadoc.zip;C:\Program Files\NetBeans 7.0\enterprise\docs\jersey-json-1.3-javadoc.zip;C:\Program Files\NetBeans 7.0\enterprise\docs\jersey-multipart-1.3-javadoc.zip;C:\Program Files\NetBeans 7.0\enterprise\docs\jersey-spring-1.3-javadoc.zip;C:\Program Files\NetBeans 7.0\enterprise\docs\oauth-client-1.3-javadoc.zip;C:\Program Files\NetBeans 7.0\enterprise\docs\oauth-signature-1.3-javadoc.zip" />
    <property name="war.content.additional" value="" />
    <property name="libs.NetBeans MIDP Components PDA.maven-pom" value="" />
    <property name="j2ee.platform.embeddableejb.classpath" value="" />
    <property name="forceRedeploy" value="false" />
    <property name="libs.eclipselink.classpath" value="C:\Program Files\NetBeans 7.0\java\modules\ext\eclipselink\eclipselink-2.2.0.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\eclipselink\eclipselink-javax.persistence-2.0.jar" />
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment" />
    <property name="libs.beans-binding.javadoc" value="C:\Program Files\NetBeans 7.0\java\docs\beansbinding-1.2.1-doc.zip" />
    <property name="libs.Java-EE-GlassFish-v3.classpath" value="D:\Work Area\Servers\glassfish-3.1\glassfish\modules\javax.security.auth.message.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jaxrpc-api-osgi.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\javax.mail.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\javax.resource.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jsf-api.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\javax.transaction.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jsf-impl.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jersey-core.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\weld-osgi-bundle.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\javax.enterprise.deploy.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\endorsed\jaxb-api-osgi.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\javax.servlet.jsp.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\javax.servlet.jsp.jstl.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\javax.management.j2ee.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\endorsed\webservices-api-osgi.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\javax.jms.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\endorsed\javax.annotation.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\javax.persistence.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\javax.security.jacc.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\bean-validator.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\javax.ejb.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jstl-impl.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\javax.servlet.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\web-core.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jackson-core-asl.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jackson-jaxrs.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jackson-mapper-asl.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jersey-client.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jersey-core.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jersey-gf-server.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jersey-json.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jersey-multipart.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\jettison.jar;D:\Work Area\Servers\glassfish-3.1\glassfish\modules\mimepull.jar" />
    <property name="java.vm.vendor" value="Sun Microsystems Inc." />
    <property name="libs.CopyLibs.classpath" value="C:\Program Files\NetBeans 7.0\java\ant\extra\org-netbeans-modules-java-j2seproject-copylibstask.jar" />
    <property name="libs.spring-framework300.classpath" value="C:\Program Files\NetBeans 7.0\ide\modules\ext\commons-logging-1.1.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\cglib-2.2.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-aop-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-asm-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-aspects-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-beans-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-context-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-context-support-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-core-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-expression-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-instrument-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-instrument-tomcat-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-jdbc-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-jms-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-orm-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-oxm-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-test-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-tx-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-web-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-webmvc-portlet-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-webmvc-3.0.2.RELEASE.jar;C:\Program Files\NetBeans 7.0\java\modules\ext\spring-3.0\spring-struts-3.0.2.RELEASE.jar" />
    <property name="libs.jsp-compiler.maven-pom" value="" />
    <property name="libs.spring-webmvc.maven-pom" value="" />
    <property name="libs.Java-EE-GlassFish-v3.wsinterop" value="" />
    <property name="libs.ejb3-persistence.classpath" value="C:\Program Files\NetBeans 7.0\java\modules\ext\hibernate\ejb3-persistence.jar" />
    <property name="libs.spring-framework.javadoc" value="" />
    <property name="libs.DataBindingME-PIM.src" value="C:\Program Files\NetBeans 7.0\mobility\sources\netbeans_databindingme_pim-src.zip" />
    <property name="libs.PostgreSQLDriver.classpath" value="C:\Program Files\NetBeans 7.0\ide\modules\ext\postgresql-8.3-603.jdbc3.jar" />
    <property name="libs.jsf12.maven-pom" value="" />
    <property name="libs.junit.src" value="" />
    <property name="annotation.processing.source.output" value="build/generated-sources/ap-source-output" />
    <property name="libs.CopyLibs.src" value="" />
    <property name="build.dir" value="build" />
    <property name="libs.jsp-compilation.classpath" value="C:\Program Files\NetBeans 7.0\java\ant\lib\ant.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\servlet3.0-jsp2.2-api.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\glassfish-jspparser-3.0.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\jsf-2_0\jsf-api.jar;C:\Program Files\NetBeans 7.0\enterprise\modules\ext\jstl.jar;C:\Program Files\NetBeans 7.0\java\ant\lib\ant-launcher.jar" />
    <property name="ant.version" value="Apache Ant(TM) version 1.8.2 compiled on December 20 2010" />
    <property name="file.encoding" value="Cp1252" />
    <property name="build.classes.excludes" value="**/*.java,**/*.form" />
    <property name="jdkBug6558476" value="true" />
    <property name="javadoc.nonavbar" value="false" />
    <property name="platform.active" value="default_platform" />
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit" />
    <property name="war.ear.name" value="OrderingSystem.war" />
  </properties>
  <testcase classname="com.onb.orderingsystem.dao.jdbc.InventoryItemDaoTest" name="testGetAvailableInventoryItems" time="4.479" />
  <testcase classname="com.onb.orderingsystem.dao.jdbc.InventoryItemDaoTest" name="testUpdateInventoryItems" time="3.921" />
  <system-out><![CDATA[23:04:47.455 [main] DEBUG org.dbunit.DBTestCase - getConnection() - start
23:04:47.478 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=driverClass, property=com.mysql.jdbc.Driver) - start
23:04:47.490 [main] DEBUG org.dbunit.JdbcDatabaseTester - getConnection() - start
23:04:47.490 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=connectionUrl, property=jdbc:mysql://127.0.0.1/orderingsystem_test) - start
23:04:47.757 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName= (dbIdentifierQuoteString=`)
23:04:47.762 [main] DEBUG o.dbunit.database.DatabaseConnection - Database connection info: 
	database product name=MySQL
	database version=5.5.2-m2-community
	database major version=5
	database minor version=5
	jdbc driver name=MySQL-AB JDBC Driver
	jdbc driver version=mysql-connector-java-5.1.16 ( Revision: ${bzr.revision-id} )
	jdbc driver major version=5
	jdbc driver minor version=1

23:04:47.839 [main] DEBUG o.dbunit.database.DatabaseConnection - validateSchema(validateStrict=false) - start
23:04:47.842 [main] WARN  o.dbunit.database.DatabaseConnection - The given schema '' does not exist.
23:04:47.843 [main] DEBUG org.dbunit.DBTestCase - getConnection() - start
23:04:47.843 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=driverClass, property=com.mysql.jdbc.Driver) - start
23:04:47.843 [main] DEBUG org.dbunit.JdbcDatabaseTester - getConnection() - start
23:04:47.843 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=connectionUrl, property=jdbc:mysql://127.0.0.1/orderingsystem_test) - start
23:04:47.953 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName= (dbIdentifierQuoteString=`)
23:04:47.953 [main] DEBUG o.dbunit.database.DatabaseConnection - Database connection info: 
	database product name=MySQL
	database version=5.5.2-m2-community
	database major version=5
	database minor version=5
	jdbc driver name=MySQL-AB JDBC Driver
	jdbc driver version=mysql-connector-java-5.1.16 ( Revision: ${bzr.revision-id} )
	jdbc driver major version=5
	jdbc driver minor version=1

23:04:48.043 [main] DEBUG o.dbunit.database.DatabaseConnection - validateSchema(validateStrict=false) - start
23:04:48.044 [main] WARN  o.dbunit.database.DatabaseConnection - The given schema '' does not exist.
23:04:48.187 [main] DEBUG org.dbunit.DatabaseTestCase - setUp() - start
23:04:48.187 [main] DEBUG org.dbunit.AbstractDatabaseTester - setSetUpOperation(setUpOperation=org.dbunit.operation.CompositeOperation[_actions=[org.dbunit.operation.DeleteAllOperation@19b1de, org.dbunit.operation.InsertOperation[_reverseRowOrder=false, super=org.dbunit.operation.InsertOperation@ec6b00]]]) - start
23:04:48.189 [main] DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
23:04:48.304 [main] DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
23:04:48.320 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
23:04:48.320 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - produce() - start
23:04:48.328 [main] DEBUG o.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=org.apache.xerces.parsers.SAXParser@153c375, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@453807) - start
23:04:48.328 [main] DEBUG o.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=org.apache.xerces.parsers.SAXParser@153c375, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@453807) - start
23:04:48.419 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@4fc156) - start
23:04:48.419 [main] DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start
23:04:48.419 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventories, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@4fc156) - start
23:04:48.419 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:48.514 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventories) - start
23:04:48.514 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:48.514 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:48.514 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=inventories, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@4fc156) - start
23:04:48.533 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown)]) - start
23:04:48.533 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventories, object=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:48.533 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:48.533 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:48.619 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - start
23:04:48.619 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - end - result=INVENTORIES
23:04:48.619 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:48.622 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:48.622 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:48.722 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:48.722 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:48.723 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:48.723 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:48.723 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:48.824 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
23:04:48.824 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
23:04:48.824 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventories) - start
23:04:48.824 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@4fc156) - start
23:04:48.824 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:48.925 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:48.925 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:48.925 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:48.925 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:48.925 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:49.025 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:49.025 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.025 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.025 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
23:04:49.025 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:49.026 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:49.026 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventories, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
23:04:49.026 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:49.026 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:49.028 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - start
23:04:49.028 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - end - result=INVENTORIES
23:04:49.028 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.028 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.028 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@4fc156) - start
23:04:49.029 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)]) - start
23:04:49.030 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=products, object=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:49.030 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.031 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.031 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - start
23:04:49.031 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - end - result=PRODUCTS
23:04:49.031 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:49.033 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.033 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.033 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.034 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:49.034 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:49.034 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:49.034 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.034 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.034 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.035 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
23:04:49.035 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
23:04:49.036 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:49.036 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@4fc156) - start
23:04:49.036 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.036 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.038 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.038 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:49.038 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.038 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.038 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.040 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.040 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.040 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.040 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.040 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.041 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:49.041 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:49.041 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:49.042 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.042 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.043 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.043 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=2) - start
23:04:49.043 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=2) - start
23:04:49.043 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:49.043 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@4fc156) - start
23:04:49.045 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.045 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.045 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.045 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:49.045 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.046 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.046 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.046 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.046 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.046 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.048 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.048 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.048 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:49.048 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:49.048 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:49.052 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.052 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.052 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.052 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=3) - start
23:04:49.052 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=3) - start
23:04:49.052 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:49.152 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@4fc156) - start
23:04:49.152 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.152 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.152 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.179 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:49.179 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.179 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.179 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.179 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.183 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.183 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.183 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.183 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.183 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:49.187 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:49.187 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:49.187 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.187 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.187 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.287 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=4) - start
23:04:49.288 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=4) - start
23:04:49.288 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:49.288 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@4fc156) - start
23:04:49.288 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.288 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.288 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.288 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:49.288 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.288 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.289 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.290 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.290 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.290 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
23:04:49.290 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.292 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.292 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=products, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]) - start
23:04:49.292 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.294 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.294 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - start
23:04:49.294 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - end - result=PRODUCTS
23:04:49.294 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.294 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.295 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@4fc156) - start
23:04:49.295 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)]) - start
23:04:49.295 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventory_items, object=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:49.297 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.297 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.297 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - start
23:04:49.297 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - end - result=INVENTORY_ITEMS
23:04:49.297 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:49.298 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.298 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.299 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.299 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:49.299 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:49.301 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:49.301 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:49.301 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.301 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.301 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.303 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
23:04:49.303 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
23:04:49.303 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:49.303 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@4fc156) - start
23:04:49.303 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.305 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.305 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.305 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:49.305 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.305 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.307 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.307 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.307 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.307 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.307 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.308 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.308 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:49.308 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:49.308 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:49.309 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:49.310 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.310 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.310 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.310 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=2) - start
23:04:49.310 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=2) - start
23:04:49.312 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:49.312 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@4fc156) - start
23:04:49.312 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.312 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.313 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.314 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:49.314 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.314 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.314 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.315 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.316 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.316 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.316 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.316 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.317 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:49.317 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:49.317 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:49.318 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:49.318 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.319 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.319 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.319 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=3) - start
23:04:49.320 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=3) - start
23:04:49.320 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:49.321 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@4fc156) - start
23:04:49.321 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.321 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.321 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.322 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:49.323 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.323 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.323 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.323 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.327 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.328 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.328 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.328 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.328 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:49.427 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:49.427 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:49.427 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:49.427 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.427 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.428 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.428 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=4) - start
23:04:49.428 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=4) - start
23:04:49.429 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:49.429 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
23:04:49.430 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:49.430 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.430 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.430 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
23:04:49.430 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.432 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.432 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventory_items, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]) - start
23:04:49.433 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.433 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.434 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - start
23:04:49.434 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - end - result=INVENTORY_ITEMS
23:04:49.434 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start
23:04:49.434 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[inventories, products, inventory_items], _tableMap={INVENTORY_ITEMS=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], INVENTORIES=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], PRODUCTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]}, _caseSensitiveTableNames=false]
23:04:49.436 [main] DEBUG org.dbunit.AbstractDatabaseTester - setDataSet(dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
23:04:49.436 [main] DEBUG org.dbunit.DatabaseTestCase - getOperationListener() - start
23:04:49.438 [main] DEBUG org.dbunit.AbstractDatabaseTester - setOperationListener(operationListener=org.dbunit.DatabaseTestCase$1@100363) - start
23:04:49.438 [main] DEBUG org.dbunit.AbstractDatabaseTester - onSetup() - start
23:04:49.438 [main] DEBUG org.dbunit.AbstractDatabaseTester - executeOperation(operation=org.dbunit.operation.CompositeOperation[_actions=[org.dbunit.operation.DeleteAllOperation@19b1de, org.dbunit.operation.InsertOperation[_reverseRowOrder=false, super=org.dbunit.operation.InsertOperation@ec6b00]]]) - start
23:04:49.439 [main] DEBUG org.dbunit.JdbcDatabaseTester - getConnection() - start
23:04:49.439 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=connectionUrl, property=jdbc:mysql://127.0.0.1/orderingsystem_test) - start
23:04:49.450 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName= (dbIdentifierQuoteString=`)
23:04:49.450 [main] DEBUG o.dbunit.database.DatabaseConnection - Database connection info: 
	database product name=MySQL
	database version=5.5.2-m2-community
	database major version=5
	database minor version=5
	jdbc driver name=MySQL-AB JDBC Driver
	jdbc driver version=mysql-connector-java-5.1.16 ( Revision: ${bzr.revision-id} )
	jdbc driver major version=5
	jdbc driver minor version=1

23:04:49.542 [main] DEBUG o.dbunit.database.DatabaseConnection - validateSchema(validateStrict=false) - start
23:04:49.547 [main] WARN  o.dbunit.database.DatabaseConnection - The given schema '' does not exist.
23:04:49.547 [main] DEBUG org.dbunit.DefaultOperationListener - connectionCreated(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=null]) - start
23:04:49.646 [main] DEBUG org.dbunit.AbstractDatabaseTester - getDataSet() - start
23:04:49.646 [main] DEBUG o.d.operation.CompositeOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=null], , dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
23:04:49.647 [main] DEBUG o.d.operation.DeleteAllOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
23:04:49.651 [main] DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start
23:04:49.653 [main] DEBUG o.d.d.s.PreparedStatementFactory - createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:49.658 [main] DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:49.664 [main] DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start
23:04:49.664 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
23:04:49.664 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
23:04:49.664 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:49.664 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:49.668 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.668 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.668 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.668 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.669 [main] DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start
23:04:49.675 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:49.675 [main] DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start
23:04:49.675 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:49.675 [main] DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start
23:04:49.675 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:49.675 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=inventory_items) - start
23:04:49.677 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:49.677 [main] DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database...
23:04:49.684 [main] DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=MySQL
	database version=5.5.2-m2-community
	database major version=5
	database minor version=5
	jdbc driver name=MySQL-AB JDBC Driver
	jdbc driver version=mysql-connector-java-5.1.16 ( Revision: ${bzr.revision-id} )
	jdbc driver major version=5
	jdbc driver minor version=1

23:04:49.684 [main] DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=com.mysql.jdbc.JDBC4ResultSet@1de9ac4
23:04:49.685 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:49.780 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:49.780 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=customers, escapePattern=null) - start
23:04:49.780 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=customers, object=null) - start
23:04:49.780 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=customers) - start
23:04:49.780 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=customers) - end - result=CUSTOMERS
23:04:49.782 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CUSTOMERS) - start
23:04:49.782 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CUSTOMERS) - end - result=CUSTOMERS
23:04:49.782 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:49.787 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:49.788 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=inventories, escapePattern=null) - start
23:04:49.789 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventories, object=null) - start
23:04:49.789 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:49.789 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:49.790 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - start
23:04:49.790 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - end - result=INVENTORIES
23:04:49.790 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:49.795 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:49.795 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=inventory_items, escapePattern=null) - start
23:04:49.796 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventory_items, object=null) - start
23:04:49.796 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.796 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.797 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - start
23:04:49.797 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - end - result=INVENTORY_ITEMS
23:04:49.797 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:49.802 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:49.802 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=order_items, escapePattern=null) - start
23:04:49.802 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=order_items, object=null) - start
23:04:49.802 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=order_items) - start
23:04:49.803 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=order_items) - end - result=ORDER_ITEMS
23:04:49.804 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDER_ITEMS) - start
23:04:49.804 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDER_ITEMS) - end - result=ORDER_ITEMS
23:04:49.804 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:49.809 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:49.809 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=orders, escapePattern=null) - start
23:04:49.809 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=orders, object=null) - start
23:04:49.809 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=orders) - start
23:04:49.811 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=orders) - end - result=ORDERS
23:04:49.811 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDERS) - start
23:04:49.811 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDERS) - end - result=ORDERS
23:04:49.811 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:49.814 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:49.814 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=products, escapePattern=null) - start
23:04:49.815 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=products, object=null) - start
23:04:49.815 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.815 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.816 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - start
23:04:49.816 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - end - result=PRODUCTS
23:04:49.817 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.817 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.817 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.821 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.823 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=inventory_items (dbIdentifierQuoteString=`)
23:04:49.823 [main] DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'inventory_items' exists in schema '' ...
23:04:49.824 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=com.mysql.jdbc.JDBC4ResultSet@194d372) - start
23:04:49.825 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - update(tableName=inventory_items, object=table=inventory_items, cols=[(id, INTEGER, noNulls), (product_sku_number, INTEGER, noNulls), (inventory_id, INTEGER, noNulls), (quantity, INTEGER, noNulls)], pk=[(id, INTEGER, noNulls)]) - start
23:04:49.843 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.843 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.926 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:49.926 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:49.926 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=, name=inventory_items, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:49.927 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:49.927 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=inventory_items, escapePattern=null) - start
23:04:49.927 [main] DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from inventory_items) - start
23:04:49.927 [main] DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from inventory_items
23:04:49.927 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=products) - start
23:04:49.928 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:49.928 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.928 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.928 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.928 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.933 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=products (dbIdentifierQuoteString=`)
23:04:49.933 [main] DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'products' exists in schema '' ...
23:04:49.934 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=com.mysql.jdbc.JDBC4ResultSet@1e0f2f6) - start
23:04:49.934 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - update(tableName=products, object=table=products, cols=[(sku_number, INTEGER, noNulls), (name, VARCHAR, noNulls), (amount, DECIMAL, noNulls)], pk=[(sku_number, INTEGER, noNulls)]) - start
23:04:49.943 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:49.943 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:49.943 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:50.036 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:50.036 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=, name=products, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.037 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:50.037 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=products, escapePattern=null) - start
23:04:50.037 [main] DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from products) - start
23:04:50.037 [main] DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from products
23:04:50.037 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=inventories) - start
23:04:50.038 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:50.038 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:50.038 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:50.038 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:50.038 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:50.042 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=inventories (dbIdentifierQuoteString=`)
23:04:50.042 [main] DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'inventories' exists in schema '' ...
23:04:50.044 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=com.mysql.jdbc.JDBC4ResultSet@1aae94f) - start
23:04:50.044 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - update(tableName=inventories, object=table=inventories, cols=[(id, INTEGER, noNulls)], pk=[(id, INTEGER, noNulls)]) - start
23:04:50.053 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:50.053 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:50.053 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:50.148 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:50.148 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=, name=inventories, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.149 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:50.149 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=inventories, escapePattern=null) - start
23:04:50.149 [main] DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from inventories) - start
23:04:50.149 [main] DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from inventories
23:04:50.149 [main] DEBUG o.d.d.statement.SimpleStatement - executeBatch() - start
23:04:50.150 [main] DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from inventory_items
23:04:50.153 [main] DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from products
23:04:50.153 [main] DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from inventories
23:04:50.154 [main] DEBUG o.d.d.statement.SimpleStatement - clearBatch() - start
23:04:50.154 [main] DEBUG o.d.d.s.AbstractBatchStatement - close() - start
23:04:50.154 [main] DEBUG o.d.operation.AbstractBatchOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
23:04:50.156 [main] DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start
23:04:50.156 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
23:04:50.156 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
23:04:50.156 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:50.156 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:50.157 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:50.157 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:50.157 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:50.157 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:50.157 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:50.162 [main] DEBUG o.d.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
23:04:50.162 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
23:04:50.162 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.162 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
23:04:50.163 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:50.163 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:50.163 [main] DEBUG o.dbunit.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:50.165 [main] DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start
23:04:50.165 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=inventories) - start
23:04:50.165 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:50.165 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:50.165 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:50.166 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:50.166 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:50.167 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:50.167 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:50.167 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:50.167 [main] DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start
23:04:50.172 [main] DEBUG org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=0) - start
23:04:50.172 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
23:04:50.172 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.172 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
23:04:50.173 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:50.173 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:50.173 [main] DEBUG org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=inventories, columns=[(id, INTEGER, noNulls)], keys=[(id, INTEGER, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.175 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=, name=inventories, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.176 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:50.176 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=inventories, escapePattern=null) - start
23:04:50.176 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=id, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.181 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:50.181 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start
23:04:50.182 [main] DEBUG o.d.d.s.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into inventories (id) values (?), connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.185 [main] DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.205 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
23:04:50.205 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.205 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
23:04:50.205 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:50.205 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:50.205 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
23:04:50.298 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
23:04:50.298 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@1c05ffd: insert into inventories (id) values (** NOT SPECIFIED **)) - start
23:04:50.298 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:50.298 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:50.298 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start
23:04:50.301 [main] DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start
23:04:50.374 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=1) - start
23:04:50.374 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
23:04:50.374 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:50.374 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=1) - start
23:04:50.403 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - executeBatch() - start
23:04:50.403 [main] DEBUG o.d.d.s.SimplePreparedStatement - executeBatch() - start
23:04:50.403 [main] DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start
23:04:50.403 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - clearBatch() - start
23:04:50.403 [main] DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start
23:04:50.403 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - close() - start
23:04:50.404 [main] DEBUG o.d.d.s.AbstractPreparedBatchStatement - close() - start
23:04:50.404 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:50.404 [main] DEBUG o.d.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]) - start
23:04:50.404 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=sku_number) - start
23:04:50.406 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.406 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:50.406 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=sku_number) - start
23:04:50.406 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:50.406 [main] DEBUG o.dbunit.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:50.407 [main] DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start
23:04:50.407 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=products) - start
23:04:50.407 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:50.407 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:50.407 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:50.407 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:50.409 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:50.409 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:50.409 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:50.409 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:50.409 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:50.409 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:50.415 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:50.415 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:50.415 [main] DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start
23:04:50.415 [main] DEBUG org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=0) - start
23:04:50.416 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=sku_number) - start
23:04:50.416 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.416 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:50.416 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=sku_number) - start
23:04:50.416 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:50.418 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
23:04:50.418 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.418 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:50.418 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
23:04:50.418 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:50.418 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=amount) - start
23:04:50.420 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.420 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:50.420 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
23:04:50.420 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:50.420 [main] DEBUG org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=products, columns=[(sku_number, INTEGER, noNulls), (name, VARCHAR, noNulls), (amount, DECIMAL, noNulls)], keys=[(sku_number, INTEGER, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.422 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=, name=products, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.423 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:50.423 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=products, escapePattern=null) - start
23:04:50.423 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=sku_number, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.427 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:50.427 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=sku_number, escapePattern=null) - start
23:04:50.427 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=name, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.432 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:50.432 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=name, escapePattern=null) - start
23:04:50.432 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=amount, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.436 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:50.436 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=amount, escapePattern=null) - start
23:04:50.436 [main] DEBUG o.d.d.s.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into products (sku_number, name, amount) values (?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.440 [main] DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.445 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=sku_number) - start
23:04:50.445 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.445 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:50.445 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=sku_number) - start
23:04:50.445 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:50.449 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
23:04:50.449 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
23:04:50.449 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@17f409c: insert into products (sku_number, name, amount) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
23:04:50.449 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:50.454 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:50.454 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
23:04:50.454 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.454 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:50.454 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
23:04:50.454 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:50.455 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Product 1, dataType=VARCHAR) - start
23:04:50.455 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Product 1, dataType=VARCHAR) - start
23:04:50.455 [main] DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Product 1, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@17f409c: insert into products (sku_number, name, amount) values (1, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
23:04:50.455 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Product 1) - start
23:04:50.457 [main] DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Product 1) - start
23:04:50.457 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=amount) - start
23:04:50.457 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.457 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:50.457 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
23:04:50.457 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:50.459 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=10.00, dataType=DECIMAL) - start
23:04:50.459 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=10.00, dataType=DECIMAL) - start
23:04:50.459 [main] DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=10.00, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@17f409c: insert into products (sku_number, name, amount) values (1, 'Product 1', ** NOT SPECIFIED **)) - start
23:04:50.459 [main] DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=10.00) - start
23:04:50.461 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start
23:04:50.461 [main] DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start
23:04:50.480 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=1) - start
23:04:50.481 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=sku_number) - start
23:04:50.481 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:50.563 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:50.563 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=sku_number) - start
23:04:50.563 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:50.563 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
23:04:50.563 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:50.564 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:50.564 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
23:04:50.564 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:50.564 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=amount) - start
23:04:50.564 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:50.564 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:50.566 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
23:04:50.566 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:50.566 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=sku_number) - start
23:04:50.566 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:50.566 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:50.568 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=sku_number) - start
23:04:50.568 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:50.568 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=2, dataType=INTEGER) - start
23:04:50.568 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=2, dataType=INTEGER) - start
23:04:50.568 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=2, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@17f409c: insert into products (sku_number, name, amount) values (1, 'Product 1', 10.00)) - start
23:04:50.569 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=2) - start
23:04:50.570 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=2) - start
23:04:50.570 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
23:04:50.570 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:50.570 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:50.570 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
23:04:50.571 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:50.571 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Product 2, dataType=VARCHAR) - start
23:04:50.571 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Product 2, dataType=VARCHAR) - start
23:04:50.571 [main] DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Product 2, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@17f409c: insert into products (sku_number, name, amount) values (2, 'Product 1', 10.00)) - start
23:04:50.573 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Product 2) - start
23:04:50.573 [main] DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Product 2) - start
23:04:50.573 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=amount) - start
23:04:50.573 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:50.573 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:50.573 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
23:04:50.574 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:50.574 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=10.00, dataType=DECIMAL) - start
23:04:50.574 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=10.00, dataType=DECIMAL) - start
23:04:50.574 [main] DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=10.00, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@17f409c: insert into products (sku_number, name, amount) values (2, 'Product 2', 10.00)) - start
23:04:50.576 [main] DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=10.00) - start
23:04:50.576 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start
23:04:50.576 [main] DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start
23:04:50.627 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=2) - start
23:04:50.627 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=sku_number) - start
23:04:50.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:50.679 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:50.679 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=sku_number) - start
23:04:50.679 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:50.679 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
23:04:50.679 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:50.680 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:50.680 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
23:04:50.680 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:50.680 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=amount) - start
23:04:50.680 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:50.681 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:50.682 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
23:04:50.683 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:50.683 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=sku_number) - start
23:04:50.683 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:50.683 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:50.685 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=sku_number) - start
23:04:50.685 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:50.685 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=3, dataType=INTEGER) - start
23:04:50.685 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=3, dataType=INTEGER) - start
23:04:50.685 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=3, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@17f409c: insert into products (sku_number, name, amount) values (2, 'Product 2', 10.00)) - start
23:04:50.687 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=3) - start
23:04:50.687 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=3) - start
23:04:50.687 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
23:04:50.687 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:50.687 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:50.687 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
23:04:50.690 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:50.690 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Product 3, dataType=VARCHAR) - start
23:04:50.690 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Product 3, dataType=VARCHAR) - start
23:04:50.690 [main] DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Product 3, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@17f409c: insert into products (sku_number, name, amount) values (3, 'Product 2', 10.00)) - start
23:04:50.692 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Product 3) - start
23:04:50.692 [main] DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Product 3) - start
23:04:50.692 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=amount) - start
23:04:50.693 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:50.693 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:50.693 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
23:04:50.694 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:50.694 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=10.00, dataType=DECIMAL) - start
23:04:50.694 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=10.00, dataType=DECIMAL) - start
23:04:50.694 [main] DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=10.00, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@17f409c: insert into products (sku_number, name, amount) values (3, 'Product 3', 10.00)) - start
23:04:50.697 [main] DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=10.00) - start
23:04:50.697 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start
23:04:50.697 [main] DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start
23:04:50.712 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=3) - start
23:04:50.712 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=sku_number) - start
23:04:50.712 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:50.800 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:50.800 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=sku_number) - start
23:04:50.800 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:50.800 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
23:04:50.800 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:50.801 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:50.801 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
23:04:50.801 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:50.801 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=amount) - start
23:04:50.801 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:50.801 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:50.803 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
23:04:50.803 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:50.803 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=sku_number) - start
23:04:50.803 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:50.803 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:50.806 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=sku_number) - start
23:04:50.806 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:50.806 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=4, dataType=INTEGER) - start
23:04:50.806 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=4, dataType=INTEGER) - start
23:04:50.806 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=4, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@17f409c: insert into products (sku_number, name, amount) values (3, 'Product 3', 10.00)) - start
23:04:50.808 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=4) - start
23:04:50.808 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=4) - start
23:04:50.809 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
23:04:50.810 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:50.810 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:50.810 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
23:04:50.811 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:50.812 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Product 4, dataType=VARCHAR) - start
23:04:50.812 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Product 4, dataType=VARCHAR) - start
23:04:50.812 [main] DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Product 4, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@17f409c: insert into products (sku_number, name, amount) values (4, 'Product 3', 10.00)) - start
23:04:50.814 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Product 4) - start
23:04:50.814 [main] DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Product 4) - start
23:04:50.814 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=amount) - start
23:04:50.814 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:50.814 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:50.814 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
23:04:50.816 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:50.816 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=10.00, dataType=DECIMAL) - start
23:04:50.816 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=10.00, dataType=DECIMAL) - start
23:04:50.816 [main] DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=10.00, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@17f409c: insert into products (sku_number, name, amount) values (4, 'Product 4', 10.00)) - start
23:04:50.818 [main] DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=10.00) - start
23:04:50.818 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start
23:04:50.818 [main] DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start
23:04:50.858 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=4) - start
23:04:50.858 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=sku_number) - start
23:04:50.859 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
23:04:50.921 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=4) - start
23:04:50.921 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - executeBatch() - start
23:04:50.921 [main] DEBUG o.d.d.s.SimplePreparedStatement - executeBatch() - start
23:04:50.921 [main] DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start
23:04:50.921 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - clearBatch() - start
23:04:50.921 [main] DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start
23:04:50.922 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - close() - start
23:04:50.922 [main] DEBUG o.d.d.s.AbstractPreparedBatchStatement - close() - start
23:04:50.922 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:50.923 [main] DEBUG o.d.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]) - start
23:04:50.924 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
23:04:50.924 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.924 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:50.924 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:50.924 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:50.924 [main] DEBUG o.dbunit.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:50.925 [main] DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start
23:04:50.925 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=inventory_items) - start
23:04:50.925 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:50.925 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:50.925 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:50.928 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:50.928 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:50.928 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:50.928 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:50.928 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:50.933 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:50.933 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:50.933 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:50.933 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:50.933 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:50.933 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:50.935 [main] DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start
23:04:50.935 [main] DEBUG org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=0) - start
23:04:50.935 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
23:04:50.936 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.936 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:50.936 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:50.936 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:50.936 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=product_sku_number) - start
23:04:50.938 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.938 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:50.938 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:50.938 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:50.938 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=inventory_id) - start
23:04:50.939 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.939 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:50.939 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:50.939 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:50.939 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=quantity) - start
23:04:50.941 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.941 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:50.941 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:50.941 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:50.941 [main] DEBUG org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=inventory_items, columns=[(id, INTEGER, noNulls), (product_sku_number, INTEGER, noNulls), (inventory_id, INTEGER, noNulls), (quantity, INTEGER, noNulls)], keys=[(id, INTEGER, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.942 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=, name=inventory_items, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.944 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:50.944 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=inventory_items, escapePattern=null) - start
23:04:50.944 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=id, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.948 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:50.948 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start
23:04:50.948 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=product_sku_number, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.953 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:50.953 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=product_sku_number, escapePattern=null) - start
23:04:50.953 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=inventory_id, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.957 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:50.957 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=inventory_id, escapePattern=null) - start
23:04:50.957 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=quantity, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.962 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:50.962 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=quantity, escapePattern=null) - start
23:04:50.962 [main] DEBUG o.d.d.s.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.966 [main] DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:50.971 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
23:04:50.971 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.971 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:50.971 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:50.971 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:50.971 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
23:04:50.974 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
23:04:50.974 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@296f76: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
23:04:50.975 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:50.980 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:50.980 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=product_sku_number) - start
23:04:50.980 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.980 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:50.980 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:50.981 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:50.981 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
23:04:50.981 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
23:04:50.981 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@296f76: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (1, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
23:04:50.983 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:50.983 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:50.983 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=inventory_id) - start
23:04:50.983 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.983 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:50.983 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:50.984 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:50.984 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
23:04:50.984 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
23:04:50.984 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@296f76: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (1, 1, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
23:04:50.986 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:50.986 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:50.986 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=quantity) - start
23:04:50.986 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:50.986 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:50.986 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:50.987 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:50.987 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=0, dataType=INTEGER) - start
23:04:50.987 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=0, dataType=INTEGER) - start
23:04:50.987 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=0, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@296f76: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (1, 1, 1, ** NOT SPECIFIED **)) - start
23:04:50.989 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=0) - start
23:04:50.989 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=0) - start
23:04:50.990 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start
23:04:50.990 [main] DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start
23:04:51.009 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=1) - start
23:04:51.009 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
23:04:51.009 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:51.093 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:51.093 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:51.093 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:51.093 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=product_sku_number) - start
23:04:51.093 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:51.094 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:51.094 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:51.094 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:51.094 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=inventory_id) - start
23:04:51.094 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:51.096 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:51.096 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:51.096 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:51.096 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=quantity) - start
23:04:51.096 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:51.097 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:51.097 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:51.097 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:51.097 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
23:04:51.097 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:51.099 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:51.099 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:51.099 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:51.099 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=2, dataType=INTEGER) - start
23:04:51.099 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=2, dataType=INTEGER) - start
23:04:51.100 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=2, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@296f76: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (1, 1, 1, 0)) - start
23:04:51.100 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=2) - start
23:04:51.100 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=2) - start
23:04:51.101 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=product_sku_number) - start
23:04:51.102 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:51.102 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:51.102 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:51.102 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:51.102 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=2, dataType=INTEGER) - start
23:04:51.103 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=2, dataType=INTEGER) - start
23:04:51.104 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=2, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@296f76: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (2, 1, 1, 0)) - start
23:04:51.104 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=2) - start
23:04:51.104 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=2) - start
23:04:51.105 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=inventory_id) - start
23:04:51.105 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:51.105 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:51.105 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:51.105 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:51.107 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
23:04:51.107 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
23:04:51.107 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@296f76: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (2, 2, 1, 0)) - start
23:04:51.107 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:51.108 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:51.108 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=quantity) - start
23:04:51.108 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:51.108 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:51.108 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:51.108 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:51.110 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=10, dataType=INTEGER) - start
23:04:51.110 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=10, dataType=INTEGER) - start
23:04:51.110 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=10, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@296f76: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (2, 2, 1, 0)) - start
23:04:51.110 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=10) - start
23:04:51.112 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=10) - start
23:04:51.112 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start
23:04:51.112 [main] DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start
23:04:51.225 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=2) - start
23:04:51.225 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start
23:04:51.225 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:51.314 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:51.314 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:51.314 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:51.314 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=product_sku_number) - start
23:04:51.314 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:51.315 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:51.315 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:51.315 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:51.315 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=inventory_id) - start
23:04:51.315 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:51.317 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:51.317 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:51.317 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:51.317 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=quantity) - start
23:04:51.317 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:51.318 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:51.318 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:51.318 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:51.318 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start
23:04:51.318 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:51.320 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:51.320 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:51.320 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:51.320 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=3, dataType=INTEGER) - start
23:04:51.320 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=3, dataType=INTEGER) - start
23:04:51.321 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=3, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@296f76: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (2, 2, 1, 10)) - start
23:04:51.321 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=3) - start
23:04:51.322 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=3) - start
23:04:51.322 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=product_sku_number) - start
23:04:51.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:51.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:51.323 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:51.323 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:51.323 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=3, dataType=INTEGER) - start
23:04:51.324 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=3, dataType=INTEGER) - start
23:04:51.325 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=3, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@296f76: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (3, 2, 1, 10)) - start
23:04:51.325 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=3) - start
23:04:51.325 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=3) - start
23:04:51.326 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=inventory_id) - start
23:04:51.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:51.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:51.326 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:51.326 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:51.328 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
23:04:51.328 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
23:04:51.328 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@296f76: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (3, 3, 1, 10)) - start
23:04:51.328 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:51.329 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:51.329 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=quantity) - start
23:04:51.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:51.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:51.329 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:51.329 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:51.330 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=0, dataType=INTEGER) - start
23:04:51.330 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=0, dataType=INTEGER) - start
23:04:51.330 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=0, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@296f76: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (3, 3, 1, 10)) - start
23:04:51.330 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=0) - start
23:04:51.333 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=0) - start
23:04:51.333 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start
23:04:51.333 [main] DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start
23:04:51.375 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=3) - start
23:04:51.376 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start
23:04:51.376 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:51.435 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:51.435 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:51.435 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:51.435 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=product_sku_number) - start
23:04:51.435 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:51.436 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:51.436 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:51.436 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:51.436 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=inventory_id) - start
23:04:51.436 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:51.438 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:51.438 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:51.438 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:51.438 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=quantity) - start
23:04:51.438 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:51.439 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:51.439 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:51.439 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:51.439 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start
23:04:51.439 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:51.441 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:51.441 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:51.441 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:51.441 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=4, dataType=INTEGER) - start
23:04:51.441 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=4, dataType=INTEGER) - start
23:04:51.442 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=4, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@296f76: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (3, 3, 1, 0)) - start
23:04:51.442 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=4) - start
23:04:51.442 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=4) - start
23:04:51.443 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=product_sku_number) - start
23:04:51.444 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:51.444 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:51.444 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:51.444 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:51.444 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=4, dataType=INTEGER) - start
23:04:51.445 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=4, dataType=INTEGER) - start
23:04:51.445 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=4, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@296f76: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (4, 3, 1, 0)) - start
23:04:51.445 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=4) - start
23:04:51.446 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=4) - start
23:04:51.447 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=inventory_id) - start
23:04:51.447 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:51.447 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:51.447 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:51.447 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:51.449 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
23:04:51.449 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
23:04:51.449 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@296f76: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (4, 4, 1, 0)) - start
23:04:51.449 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:51.450 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:51.450 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=quantity) - start
23:04:51.451 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:51.451 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:51.451 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:51.451 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:51.452 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=30, dataType=INTEGER) - start
23:04:51.452 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=30, dataType=INTEGER) - start
23:04:51.452 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=30, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@296f76: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (4, 4, 1, 0)) - start
23:04:51.452 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=30) - start
23:04:51.454 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=30) - start
23:04:51.454 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start
23:04:51.454 [main] DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start
23:04:51.471 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=4) - start
23:04:51.471 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start
23:04:51.471 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
23:04:51.557 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=4) - start
23:04:51.557 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - executeBatch() - start
23:04:51.557 [main] DEBUG o.d.d.s.SimplePreparedStatement - executeBatch() - start
23:04:51.557 [main] DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start
23:04:51.557 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - clearBatch() - start
23:04:51.557 [main] DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start
23:04:51.558 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - close() - start
23:04:51.558 [main] DEBUG o.d.d.s.AbstractPreparedBatchStatement - close() - start
23:04:51.558 [main] DEBUG org.dbunit.DefaultOperationListener - operationSetUpFinished(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:51.559 [main] DEBUG org.dbunit.DefaultOperationListener - closeConnection(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@18a49e0, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@16d2633, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:51.561 [main] DEBUG o.dbunit.database.DatabaseConnection - close() - start
23:04:51.564 [main] DEBUG org.dbunit.DatabaseTestCase - tearDown() - start
23:04:51.564 [main] DEBUG org.dbunit.AbstractDatabaseTester - setTearDownOperation(tearDownOperation=org.dbunit.operation.DeleteAllOperation@19b1de) - start
23:04:51.564 [main] DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
23:04:51.565 [main] DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
23:04:51.565 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
23:04:51.565 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - produce() - start
23:04:51.566 [main] DEBUG o.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=org.apache.xerces.parsers.SAXParser@147c1db, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@82d37) - start
23:04:51.570 [main] DEBUG o.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=org.apache.xerces.parsers.SAXParser@147c1db, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@82d37) - start
23:04:51.570 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@d09ad3) - start
23:04:51.570 [main] DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start
23:04:51.570 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventories, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@d09ad3) - start
23:04:51.572 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.572 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventories) - start
23:04:51.572 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:51.572 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:51.572 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=inventories, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@d09ad3) - start
23:04:51.574 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown)]) - start
23:04:51.574 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventories, object=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:51.574 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:51.575 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:51.576 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - start
23:04:51.576 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - end - result=INVENTORIES
23:04:51.577 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:51.577 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.577 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:51.578 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:51.578 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:51.578 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.578 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:51.578 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:51.580 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
23:04:51.580 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
23:04:51.580 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventories) - start
23:04:51.580 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@d09ad3) - start
23:04:51.580 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.582 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:51.582 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:51.582 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:51.582 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.582 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:51.584 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:51.584 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.584 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.584 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
23:04:51.584 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:51.585 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:51.585 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventories, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
23:04:51.586 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:51.586 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:51.587 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - start
23:04:51.587 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - end - result=INVENTORIES
23:04:51.587 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.587 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.587 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@d09ad3) - start
23:04:51.589 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)]) - start
23:04:51.590 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=products, object=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:51.590 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.591 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.591 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - start
23:04:51.591 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - end - result=PRODUCTS
23:04:51.591 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:51.592 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.593 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.593 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.593 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:51.593 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:51.594 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:51.594 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.594 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.594 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.594 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
23:04:51.594 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
23:04:51.596 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:51.596 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@d09ad3) - start
23:04:51.596 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.596 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.598 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.598 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:51.598 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.598 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.598 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.599 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.600 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.600 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.600 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.600 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.601 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:51.601 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:51.601 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:51.601 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.601 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.603 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.603 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=2) - start
23:04:51.603 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=2) - start
23:04:51.603 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:51.603 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@d09ad3) - start
23:04:51.605 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.605 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.605 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.605 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:51.605 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.606 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.606 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.606 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.606 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.606 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.608 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.608 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.608 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:51.608 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:51.608 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:51.610 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.610 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.610 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.610 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=3) - start
23:04:51.610 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=3) - start
23:04:51.610 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:51.612 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@d09ad3) - start
23:04:51.612 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.612 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.612 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.614 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:51.614 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.614 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.614 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.614 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.615 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.615 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.615 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.615 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.615 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:51.617 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:51.617 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:51.617 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.617 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.617 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.619 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=4) - start
23:04:51.619 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=4) - start
23:04:51.619 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:51.619 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@d09ad3) - start
23:04:51.619 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.620 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.620 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.620 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:51.621 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.621 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.622 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.622 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.622 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.622 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
23:04:51.622 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.624 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.624 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=products, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]) - start
23:04:51.624 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:51.626 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:51.626 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - start
23:04:51.626 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - end - result=PRODUCTS
23:04:51.626 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.626 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.627 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@d09ad3) - start
23:04:51.627 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)]) - start
23:04:51.627 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventory_items, object=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:51.629 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.629 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.629 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - start
23:04:51.629 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - end - result=INVENTORY_ITEMS
23:04:51.629 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:51.631 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.631 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.631 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.631 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:51.631 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:51.633 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:51.633 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:51.633 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.633 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.633 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.635 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
23:04:51.635 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
23:04:51.635 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:51.635 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@d09ad3) - start
23:04:51.635 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.636 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.637 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.637 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:51.637 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.637 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.638 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.639 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.639 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.639 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.639 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.640 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.640 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:51.640 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:51.640 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:51.640 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:51.642 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.642 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.642 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.642 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=2) - start
23:04:51.642 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=2) - start
23:04:51.644 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:51.644 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@d09ad3) - start
23:04:51.644 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.644 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.645 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.645 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:51.645 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.645 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.645 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.647 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.647 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.647 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.647 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.647 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.649 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:51.649 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:51.649 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:51.649 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:51.649 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.651 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.651 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.651 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=3) - start
23:04:51.651 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=3) - start
23:04:51.651 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:51.652 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@d09ad3) - start
23:04:51.652 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.653 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.653 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.654 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:51.654 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.654 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.654 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.654 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.656 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.656 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.656 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.656 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.656 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:51.658 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:51.658 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:51.658 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:51.658 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.658 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.659 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.660 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=4) - start
23:04:51.662 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=4) - start
23:04:51.662 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:51.662 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
23:04:51.662 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:51.662 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.765 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.765 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
23:04:51.765 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.765 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.765 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventory_items, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]) - start
23:04:51.864 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:51.864 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:51.864 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - start
23:04:51.864 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - end - result=INVENTORY_ITEMS
23:04:51.864 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start
23:04:51.865 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[inventories, products, inventory_items], _tableMap={INVENTORY_ITEMS=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], INVENTORIES=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], PRODUCTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]}, _caseSensitiveTableNames=false]
23:04:51.870 [main] DEBUG org.dbunit.AbstractDatabaseTester - setDataSet(dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
23:04:51.870 [main] DEBUG org.dbunit.DatabaseTestCase - getOperationListener() - start
23:04:51.870 [main] DEBUG org.dbunit.AbstractDatabaseTester - setOperationListener(operationListener=org.dbunit.DatabaseTestCase$1@100363) - start
23:04:51.870 [main] DEBUG org.dbunit.AbstractDatabaseTester - onTearDown() - start
23:04:51.870 [main] DEBUG org.dbunit.AbstractDatabaseTester - executeOperation(operation=org.dbunit.operation.DeleteAllOperation@19b1de) - start
23:04:51.970 [main] DEBUG org.dbunit.JdbcDatabaseTester - getConnection() - start
23:04:51.970 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=connectionUrl, property=jdbc:mysql://127.0.0.1/orderingsystem_test) - start
23:04:51.980 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName= (dbIdentifierQuoteString=`)
23:04:51.980 [main] DEBUG o.dbunit.database.DatabaseConnection - Database connection info: 
	database product name=MySQL
	database version=5.5.2-m2-community
	database major version=5
	database minor version=5
	jdbc driver name=MySQL-AB JDBC Driver
	jdbc driver version=mysql-connector-java-5.1.16 ( Revision: ${bzr.revision-id} )
	jdbc driver major version=5
	jdbc driver minor version=1

23:04:52.073 [main] DEBUG o.dbunit.database.DatabaseConnection - validateSchema(validateStrict=false) - start
23:04:52.074 [main] WARN  o.dbunit.database.DatabaseConnection - The given schema '' does not exist.
23:04:52.074 [main] DEBUG org.dbunit.DefaultOperationListener - connectionCreated(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b60b93, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1b1fbf4, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=null]) - start
23:04:52.074 [main] DEBUG org.dbunit.AbstractDatabaseTester - getDataSet() - start
23:04:52.075 [main] DEBUG o.d.operation.DeleteAllOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b60b93, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1b1fbf4, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
23:04:52.075 [main] DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start
23:04:52.075 [main] DEBUG o.d.d.s.PreparedStatementFactory - createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b60b93, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1b1fbf4, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:52.079 [main] DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b60b93, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1b1fbf4, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:52.083 [main] DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start
23:04:52.083 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
23:04:52.083 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
23:04:52.083 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:52.083 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:52.087 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.087 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.087 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.087 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.087 [main] DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start
23:04:52.092 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:52.092 [main] DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start
23:04:52.092 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:52.092 [main] DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start
23:04:52.092 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:52.092 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=inventory_items) - start
23:04:52.093 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:52.093 [main] DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database...
23:04:52.095 [main] DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=MySQL
	database version=5.5.2-m2-community
	database major version=5
	database minor version=5
	jdbc driver name=MySQL-AB JDBC Driver
	jdbc driver version=mysql-connector-java-5.1.16 ( Revision: ${bzr.revision-id} )
	jdbc driver major version=5
	jdbc driver minor version=1

23:04:52.096 [main] DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=com.mysql.jdbc.JDBC4ResultSet@100ebec
23:04:52.096 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1b1fbf4, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:52.096 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:52.096 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=customers, escapePattern=null) - start
23:04:52.096 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=customers, object=null) - start
23:04:52.096 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=customers) - start
23:04:52.096 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=customers) - end - result=CUSTOMERS
23:04:52.099 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CUSTOMERS) - start
23:04:52.102 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CUSTOMERS) - end - result=CUSTOMERS
23:04:52.102 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1b1fbf4, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:52.103 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:52.103 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=inventories, escapePattern=null) - start
23:04:52.103 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventories, object=null) - start
23:04:52.103 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:52.103 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:52.104 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - start
23:04:52.104 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - end - result=INVENTORIES
23:04:52.104 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1b1fbf4, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:52.108 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:52.108 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=inventory_items, escapePattern=null) - start
23:04:52.108 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventory_items, object=null) - start
23:04:52.108 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.109 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.109 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - start
23:04:52.110 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - end - result=INVENTORY_ITEMS
23:04:52.110 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1b1fbf4, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:52.114 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:52.114 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=order_items, escapePattern=null) - start
23:04:52.114 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=order_items, object=null) - start
23:04:52.114 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=order_items) - start
23:04:52.114 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=order_items) - end - result=ORDER_ITEMS
23:04:52.115 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDER_ITEMS) - start
23:04:52.115 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDER_ITEMS) - end - result=ORDER_ITEMS
23:04:52.115 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1b1fbf4, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:52.120 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:52.120 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=orders, escapePattern=null) - start
23:04:52.120 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=orders, object=null) - start
23:04:52.120 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=orders) - start
23:04:52.120 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=orders) - end - result=ORDERS
23:04:52.121 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDERS) - start
23:04:52.121 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDERS) - end - result=ORDERS
23:04:52.121 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1b1fbf4, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:52.126 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:52.126 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=products, escapePattern=null) - start
23:04:52.126 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=products, object=null) - start
23:04:52.126 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.126 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.127 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - start
23:04:52.127 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - end - result=PRODUCTS
23:04:52.127 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.127 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.127 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.132 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.132 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=inventory_items (dbIdentifierQuoteString=`)
23:04:52.132 [main] DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'inventory_items' exists in schema '' ...
23:04:52.133 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=com.mysql.jdbc.JDBC4ResultSet@1b06041) - start
23:04:52.134 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - update(tableName=inventory_items, object=table=inventory_items, cols=[(id, INTEGER, noNulls), (product_sku_number, INTEGER, noNulls), (inventory_id, INTEGER, noNulls), (quantity, INTEGER, noNulls)], pk=[(id, INTEGER, noNulls)]) - start
23:04:52.142 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.142 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.236 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.236 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.236 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=, name=inventory_items, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b60b93, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1b1fbf4, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:52.237 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:52.237 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=inventory_items, escapePattern=null) - start
23:04:52.237 [main] DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from inventory_items) - start
23:04:52.237 [main] DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from inventory_items
23:04:52.237 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=products) - start
23:04:52.238 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:52.238 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.238 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.238 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.238 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.243 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=products (dbIdentifierQuoteString=`)
23:04:52.243 [main] DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'products' exists in schema '' ...
23:04:52.244 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=com.mysql.jdbc.JDBC4ResultSet@138c63) - start
23:04:52.244 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - update(tableName=products, object=table=products, cols=[(sku_number, INTEGER, noNulls), (name, VARCHAR, noNulls), (amount, DECIMAL, noNulls)], pk=[(sku_number, INTEGER, noNulls)]) - start
23:04:52.253 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.253 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.253 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.346 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.346 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=, name=products, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b60b93, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1b1fbf4, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:52.347 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:52.348 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=products, escapePattern=null) - start
23:04:52.348 [main] DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from products) - start
23:04:52.348 [main] DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from products
23:04:52.348 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=inventories) - start
23:04:52.348 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:52.348 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:52.348 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:52.348 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:52.349 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:52.353 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=inventories (dbIdentifierQuoteString=`)
23:04:52.353 [main] DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'inventories' exists in schema '' ...
23:04:52.355 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=com.mysql.jdbc.JDBC4ResultSet@25c828) - start
23:04:52.355 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - update(tableName=inventories, object=table=inventories, cols=[(id, INTEGER, noNulls)], pk=[(id, INTEGER, noNulls)]) - start
23:04:52.362 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:52.362 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:52.362 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:52.456 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:52.456 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=, name=inventories, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b60b93, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1b1fbf4, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:52.457 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:52.457 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=inventories, escapePattern=null) - start
23:04:52.457 [main] DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from inventories) - start
23:04:52.457 [main] DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from inventories
23:04:52.457 [main] DEBUG o.d.d.statement.SimpleStatement - executeBatch() - start
23:04:52.458 [main] DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from inventory_items
23:04:52.531 [main] DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from products
23:04:52.550 [main] DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from inventories
23:04:52.575 [main] DEBUG o.d.d.statement.SimpleStatement - clearBatch() - start
23:04:52.575 [main] DEBUG o.d.d.s.AbstractBatchStatement - close() - start
23:04:52.575 [main] DEBUG org.dbunit.DefaultOperationListener - operationTearDownFinished(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b60b93, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1b1fbf4, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:52.663 [main] DEBUG org.dbunit.DefaultOperationListener - closeConnection(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b60b93, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1b1fbf4, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:52.663 [main] DEBUG o.dbunit.database.DatabaseConnection - close() - start
23:04:52.666 [main] DEBUG org.dbunit.DatabaseTestCase - setUp() - start
23:04:52.666 [main] DEBUG org.dbunit.AbstractDatabaseTester - setSetUpOperation(setUpOperation=org.dbunit.operation.CompositeOperation[_actions=[org.dbunit.operation.DeleteAllOperation@19b1de, org.dbunit.operation.InsertOperation[_reverseRowOrder=false, super=org.dbunit.operation.InsertOperation@ec6b00]]]) - start
23:04:52.668 [main] DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
23:04:52.668 [main] DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
23:04:52.668 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
23:04:52.675 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - produce() - start
23:04:52.676 [main] DEBUG o.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=org.apache.xerces.parsers.SAXParser@a77106, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@ed662d) - start
23:04:52.676 [main] DEBUG o.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=org.apache.xerces.parsers.SAXParser@a77106, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@ed662d) - start
23:04:52.677 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@1cf4a2c) - start
23:04:52.677 [main] DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start
23:04:52.677 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventories, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@1cf4a2c) - start
23:04:52.677 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.677 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventories) - start
23:04:52.677 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:52.677 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:52.677 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=inventories, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@1cf4a2c) - start
23:04:52.679 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown)]) - start
23:04:52.679 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventories, object=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:52.679 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:52.679 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:52.681 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - start
23:04:52.681 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - end - result=INVENTORIES
23:04:52.681 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:52.681 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.681 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:52.683 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:52.683 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:52.684 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.684 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:52.684 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:52.685 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
23:04:52.685 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
23:04:52.685 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventories) - start
23:04:52.685 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@1cf4a2c) - start
23:04:52.685 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.687 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:52.687 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:52.689 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:52.690 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.690 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:52.690 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:52.789 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.789 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.789 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
23:04:52.789 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:52.789 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:52.790 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventories, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
23:04:52.790 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:52.790 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:52.793 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - start
23:04:52.793 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - end - result=INVENTORIES
23:04:52.793 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.793 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.893 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@1cf4a2c) - start
23:04:52.893 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)]) - start
23:04:52.893 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=products, object=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:52.894 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.894 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.894 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - start
23:04:52.894 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - end - result=PRODUCTS
23:04:52.894 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:52.896 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.896 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.896 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.896 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:52.896 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:52.898 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:52.898 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.898 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.898 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.898 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
23:04:52.898 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
23:04:52.899 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:52.900 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@1cf4a2c) - start
23:04:52.900 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.900 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.901 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.901 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:52.901 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.901 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.901 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.903 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.903 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.903 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.903 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.903 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.905 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:52.905 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:52.905 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:52.905 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.905 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.907 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.907 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=2) - start
23:04:52.907 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=2) - start
23:04:52.907 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:52.907 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@1cf4a2c) - start
23:04:52.908 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.908 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.908 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.908 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:52.908 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.910 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.910 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.910 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.910 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.910 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.912 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.912 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.912 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:52.912 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:52.912 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:52.913 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.913 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.913 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.913 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=3) - start
23:04:52.913 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=3) - start
23:04:52.914 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:52.915 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@1cf4a2c) - start
23:04:52.915 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.915 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.915 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.917 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:52.917 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.917 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.917 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.917 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.919 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.919 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.919 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.919 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.919 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:52.920 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:52.920 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:52.920 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.920 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.920 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.922 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=4) - start
23:04:52.922 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=4) - start
23:04:52.922 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:52.922 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@1cf4a2c) - start
23:04:52.922 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.924 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.924 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.924 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:52.924 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.924 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.926 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.926 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.926 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.926 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
23:04:52.926 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.927 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.927 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=products, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]) - start
23:04:52.928 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:52.929 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:52.929 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - start
23:04:52.930 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - end - result=PRODUCTS
23:04:52.930 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.930 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.930 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@1cf4a2c) - start
23:04:52.930 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)]) - start
23:04:52.931 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventory_items, object=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:52.932 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.932 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.932 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - start
23:04:52.932 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - end - result=INVENTORY_ITEMS
23:04:52.932 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:52.934 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.934 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.934 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.934 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:52.934 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:52.936 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:52.936 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:52.936 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.936 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.936 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.938 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
23:04:52.938 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
23:04:52.938 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:52.938 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@1cf4a2c) - start
23:04:52.938 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.940 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.940 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.940 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:52.940 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.940 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.941 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.941 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.941 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.941 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.941 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.943 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.943 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:52.943 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:52.943 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:52.943 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:52.945 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.945 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.945 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.945 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=2) - start
23:04:52.945 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=2) - start
23:04:52.947 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:52.947 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@1cf4a2c) - start
23:04:52.947 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.947 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.949 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.949 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:52.949 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.949 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.949 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.950 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.950 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.950 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.950 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.950 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.952 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:52.952 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:52.952 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:52.952 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:52.952 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.954 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.954 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.954 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=3) - start
23:04:52.954 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=3) - start
23:04:52.954 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:52.956 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@1cf4a2c) - start
23:04:52.956 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.956 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.956 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.957 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:52.957 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.957 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.957 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.957 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.959 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.959 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.959 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.959 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.959 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:52.961 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:52.961 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:52.961 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:52.961 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.961 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.962 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.963 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=4) - start
23:04:52.963 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=4) - start
23:04:52.963 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:52.963 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
23:04:52.964 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:52.964 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.964 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.964 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
23:04:52.964 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.966 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.966 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventory_items, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]) - start
23:04:52.967 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:52.967 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:52.967 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - start
23:04:52.967 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - end - result=INVENTORY_ITEMS
23:04:52.967 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start
23:04:52.968 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[inventories, products, inventory_items], _tableMap={INVENTORY_ITEMS=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], INVENTORIES=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], PRODUCTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]}, _caseSensitiveTableNames=false]
23:04:52.970 [main] DEBUG org.dbunit.AbstractDatabaseTester - setDataSet(dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
23:04:52.970 [main] DEBUG org.dbunit.DatabaseTestCase - getOperationListener() - start
23:04:52.970 [main] DEBUG org.dbunit.AbstractDatabaseTester - setOperationListener(operationListener=org.dbunit.DatabaseTestCase$1@701a27) - start
23:04:52.970 [main] DEBUG org.dbunit.AbstractDatabaseTester - onSetup() - start
23:04:52.970 [main] DEBUG org.dbunit.AbstractDatabaseTester - executeOperation(operation=org.dbunit.operation.CompositeOperation[_actions=[org.dbunit.operation.DeleteAllOperation@19b1de, org.dbunit.operation.InsertOperation[_reverseRowOrder=false, super=org.dbunit.operation.InsertOperation@ec6b00]]]) - start
23:04:52.971 [main] DEBUG org.dbunit.JdbcDatabaseTester - getConnection() - start
23:04:52.971 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=connectionUrl, property=jdbc:mysql://127.0.0.1/orderingsystem_test) - start
23:04:52.979 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName= (dbIdentifierQuoteString=`)
23:04:52.980 [main] DEBUG o.dbunit.database.DatabaseConnection - Database connection info: 
	database product name=MySQL
	database version=5.5.2-m2-community
	database major version=5
	database minor version=5
	jdbc driver name=MySQL-AB JDBC Driver
	jdbc driver version=mysql-connector-java-5.1.16 ( Revision: ${bzr.revision-id} )
	jdbc driver major version=5
	jdbc driver minor version=1

23:04:53.076 [main] DEBUG o.dbunit.database.DatabaseConnection - validateSchema(validateStrict=false) - start
23:04:53.077 [main] WARN  o.dbunit.database.DatabaseConnection - The given schema '' does not exist.
23:04:53.077 [main] DEBUG org.dbunit.DefaultOperationListener - connectionCreated(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=null]) - start
23:04:53.110 [main] DEBUG org.dbunit.AbstractDatabaseTester - getDataSet() - start
23:04:53.111 [main] DEBUG o.d.operation.CompositeOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=null], , dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
23:04:53.118 [main] DEBUG o.d.operation.DeleteAllOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
23:04:53.119 [main] DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start
23:04:53.119 [main] DEBUG o.d.d.s.PreparedStatementFactory - createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:53.123 [main] DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:53.123 [main] DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start
23:04:53.123 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
23:04:53.123 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
23:04:53.123 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:53.123 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:53.127 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:53.127 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:53.127 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:53.127 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:53.128 [main] DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start
23:04:53.132 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:53.132 [main] DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start
23:04:53.132 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:53.132 [main] DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start
23:04:53.132 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:53.132 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=inventory_items) - start
23:04:53.134 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:53.134 [main] DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database...
23:04:53.135 [main] DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=MySQL
	database version=5.5.2-m2-community
	database major version=5
	database minor version=5
	jdbc driver name=MySQL-AB JDBC Driver
	jdbc driver version=mysql-connector-java-5.1.16 ( Revision: ${bzr.revision-id} )
	jdbc driver major version=5
	jdbc driver minor version=1

23:04:53.136 [main] DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=com.mysql.jdbc.JDBC4ResultSet@15311bd
23:04:53.136 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:53.136 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:53.136 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=customers, escapePattern=null) - start
23:04:53.136 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=customers, object=null) - start
23:04:53.136 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=customers) - start
23:04:53.136 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=customers) - end - result=CUSTOMERS
23:04:53.138 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CUSTOMERS) - start
23:04:53.138 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CUSTOMERS) - end - result=CUSTOMERS
23:04:53.138 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:53.143 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:53.143 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=inventories, escapePattern=null) - start
23:04:53.143 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventories, object=null) - start
23:04:53.143 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:53.143 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:53.144 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - start
23:04:53.144 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - end - result=INVENTORIES
23:04:53.144 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:53.149 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:53.149 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=inventory_items, escapePattern=null) - start
23:04:53.149 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventory_items, object=null) - start
23:04:53.149 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:53.149 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:53.150 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - start
23:04:53.150 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - end - result=INVENTORY_ITEMS
23:04:53.150 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:53.155 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:53.155 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=order_items, escapePattern=null) - start
23:04:53.155 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=order_items, object=null) - start
23:04:53.155 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=order_items) - start
23:04:53.155 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=order_items) - end - result=ORDER_ITEMS
23:04:53.156 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDER_ITEMS) - start
23:04:53.156 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDER_ITEMS) - end - result=ORDER_ITEMS
23:04:53.156 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:53.160 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:53.160 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=orders, escapePattern=null) - start
23:04:53.160 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=orders, object=null) - start
23:04:53.160 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=orders) - start
23:04:53.160 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=orders) - end - result=ORDERS
23:04:53.162 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDERS) - start
23:04:53.162 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDERS) - end - result=ORDERS
23:04:53.162 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:53.166 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:53.166 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=products, escapePattern=null) - start
23:04:53.166 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=products, object=null) - start
23:04:53.166 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:53.166 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:53.167 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - start
23:04:53.167 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - end - result=PRODUCTS
23:04:53.167 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:53.167 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:53.167 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:53.172 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:53.172 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=inventory_items (dbIdentifierQuoteString=`)
23:04:53.172 [main] DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'inventory_items' exists in schema '' ...
23:04:53.173 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=com.mysql.jdbc.JDBC4ResultSet@1c65216) - start
23:04:53.174 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - update(tableName=inventory_items, object=table=inventory_items, cols=[(id, INTEGER, noNulls), (product_sku_number, INTEGER, noNulls), (inventory_id, INTEGER, noNulls), (quantity, INTEGER, noNulls)], pk=[(id, INTEGER, noNulls)]) - start
23:04:53.181 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:53.181 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:53.276 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:53.276 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:53.276 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=, name=inventory_items, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:53.277 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:53.277 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=inventory_items, escapePattern=null) - start
23:04:53.277 [main] DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from inventory_items) - start
23:04:53.277 [main] DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from inventory_items
23:04:53.277 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=products) - start
23:04:53.278 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:53.278 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:53.278 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:53.278 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:53.278 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:53.283 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=products (dbIdentifierQuoteString=`)
23:04:53.283 [main] DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'products' exists in schema '' ...
23:04:53.284 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=com.mysql.jdbc.JDBC4ResultSet@238a47) - start
23:04:53.284 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - update(tableName=products, object=table=products, cols=[(sku_number, INTEGER, noNulls), (name, VARCHAR, noNulls), (amount, DECIMAL, noNulls)], pk=[(sku_number, INTEGER, noNulls)]) - start
23:04:53.291 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:53.292 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:53.292 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:53.387 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:53.387 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=, name=products, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:53.388 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:53.388 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=products, escapePattern=null) - start
23:04:53.388 [main] DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from products) - start
23:04:53.388 [main] DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from products
23:04:53.388 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=inventories) - start
23:04:53.389 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:53.389 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:53.389 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:53.389 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:53.389 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:53.393 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=inventories (dbIdentifierQuoteString=`)
23:04:53.393 [main] DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'inventories' exists in schema '' ...
23:04:53.395 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=com.mysql.jdbc.JDBC4ResultSet@1343ed0) - start
23:04:53.395 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - update(tableName=inventories, object=table=inventories, cols=[(id, INTEGER, noNulls)], pk=[(id, INTEGER, noNulls)]) - start
23:04:53.401 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:53.401 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:53.401 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:53.497 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:53.497 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=, name=inventories, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:53.498 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:53.498 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=inventories, escapePattern=null) - start
23:04:53.498 [main] DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from inventories) - start
23:04:53.498 [main] DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from inventories
23:04:53.498 [main] DEBUG o.d.d.statement.SimpleStatement - executeBatch() - start
23:04:53.499 [main] DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from inventory_items
23:04:53.499 [main] DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from products
23:04:53.499 [main] DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from inventories
23:04:53.500 [main] DEBUG o.d.d.statement.SimpleStatement - clearBatch() - start
23:04:53.500 [main] DEBUG o.d.d.s.AbstractBatchStatement - close() - start
23:04:53.500 [main] DEBUG o.d.operation.AbstractBatchOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
23:04:53.504 [main] DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start
23:04:53.504 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
23:04:53.504 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
23:04:53.504 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:53.504 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:53.506 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:53.506 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:53.506 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:53.506 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:53.506 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:53.511 [main] DEBUG o.d.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
23:04:53.511 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
23:04:53.511 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:53.511 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
23:04:53.512 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:53.512 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:53.512 [main] DEBUG o.dbunit.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:53.514 [main] DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start
23:04:53.514 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=inventories) - start
23:04:53.514 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:53.514 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:53.514 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:53.515 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:53.515 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:53.515 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:53.515 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:53.515 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:53.515 [main] DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start
23:04:53.520 [main] DEBUG org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=0) - start
23:04:53.520 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
23:04:53.520 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:53.520 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
23:04:53.521 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:53.521 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:53.521 [main] DEBUG org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=inventories, columns=[(id, INTEGER, noNulls)], keys=[(id, INTEGER, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:53.523 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=, name=inventories, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:53.524 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:53.524 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=inventories, escapePattern=null) - start
23:04:53.524 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=id, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:53.528 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:53.528 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start
23:04:53.528 [main] DEBUG o.d.d.s.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into inventories (id) values (?), connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:53.532 [main] DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:53.537 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
23:04:53.537 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:53.537 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
23:04:53.537 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:53.537 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:53.537 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
23:04:53.541 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
23:04:53.541 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@979e8b: insert into inventories (id) values (** NOT SPECIFIED **)) - start
23:04:53.541 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:53.541 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:53.541 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start
23:04:53.546 [main] DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start
23:04:53.643 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=1) - start
23:04:53.643 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
23:04:53.643 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:53.643 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=1) - start
23:04:53.648 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - executeBatch() - start
23:04:53.648 [main] DEBUG o.d.d.s.SimplePreparedStatement - executeBatch() - start
23:04:53.648 [main] DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start
23:04:53.648 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - clearBatch() - start
23:04:53.648 [main] DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start
23:04:53.648 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - close() - start
23:04:53.649 [main] DEBUG o.d.d.s.AbstractPreparedBatchStatement - close() - start
23:04:53.649 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:53.649 [main] DEBUG o.d.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]) - start
23:04:53.649 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=sku_number) - start
23:04:53.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:53.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:53.651 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=sku_number) - start
23:04:53.651 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:53.651 [main] DEBUG o.dbunit.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:53.651 [main] DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start
23:04:53.651 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=products) - start
23:04:53.651 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:53.652 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:53.652 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:53.652 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:53.654 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:53.654 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:53.654 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:53.654 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:53.654 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:53.654 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:53.659 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:53.659 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:53.659 [main] DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start
23:04:53.659 [main] DEBUG org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=0) - start
23:04:53.661 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=sku_number) - start
23:04:53.661 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:53.661 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:53.661 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=sku_number) - start
23:04:53.661 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:53.662 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
23:04:53.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:53.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:53.662 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
23:04:53.662 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:53.662 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=amount) - start
23:04:53.664 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:53.664 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:53.664 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
23:04:53.664 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:53.664 [main] DEBUG org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=products, columns=[(sku_number, INTEGER, noNulls), (name, VARCHAR, noNulls), (amount, DECIMAL, noNulls)], keys=[(sku_number, INTEGER, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:53.666 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=, name=products, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:53.668 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:53.668 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=products, escapePattern=null) - start
23:04:53.668 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=sku_number, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:53.671 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:53.672 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=sku_number, escapePattern=null) - start
23:04:53.672 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=name, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:53.676 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:53.676 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=name, escapePattern=null) - start
23:04:53.676 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=amount, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:53.681 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:53.681 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=amount, escapePattern=null) - start
23:04:53.681 [main] DEBUG o.d.d.s.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into products (sku_number, name, amount) values (?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:53.685 [main] DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:53.690 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=sku_number) - start
23:04:53.690 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:53.690 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:53.690 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=sku_number) - start
23:04:53.690 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:53.694 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
23:04:53.694 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
23:04:53.694 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@1b0bdc8: insert into products (sku_number, name, amount) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
23:04:53.694 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:53.699 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:53.699 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
23:04:53.699 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:53.699 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:53.699 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
23:04:53.699 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:53.700 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Product 1, dataType=VARCHAR) - start
23:04:53.700 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Product 1, dataType=VARCHAR) - start
23:04:53.700 [main] DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Product 1, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@1b0bdc8: insert into products (sku_number, name, amount) values (1, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
23:04:53.700 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Product 1) - start
23:04:53.702 [main] DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Product 1) - start
23:04:53.702 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=amount) - start
23:04:53.702 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:53.702 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:53.702 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
23:04:53.702 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:53.703 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=10.00, dataType=DECIMAL) - start
23:04:53.704 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=10.00, dataType=DECIMAL) - start
23:04:53.704 [main] DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=10.00, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@1b0bdc8: insert into products (sku_number, name, amount) values (1, 'Product 1', ** NOT SPECIFIED **)) - start
23:04:53.704 [main] DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=10.00) - start
23:04:53.705 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start
23:04:53.706 [main] DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start
23:04:53.731 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=1) - start
23:04:53.731 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=sku_number) - start
23:04:53.731 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:53.808 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:53.808 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=sku_number) - start
23:04:53.808 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:53.808 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
23:04:53.808 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:53.809 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:53.809 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
23:04:53.809 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:53.809 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=amount) - start
23:04:53.809 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:53.809 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:53.810 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
23:04:53.811 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:53.811 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=sku_number) - start
23:04:53.811 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:53.811 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:53.812 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=sku_number) - start
23:04:53.812 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:53.812 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=2, dataType=INTEGER) - start
23:04:53.812 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=2, dataType=INTEGER) - start
23:04:53.812 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=2, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@1b0bdc8: insert into products (sku_number, name, amount) values (1, 'Product 1', 10.00)) - start
23:04:53.814 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=2) - start
23:04:53.814 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=2) - start
23:04:53.814 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
23:04:53.814 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:53.814 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:53.814 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
23:04:53.815 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:53.815 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Product 2, dataType=VARCHAR) - start
23:04:53.815 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Product 2, dataType=VARCHAR) - start
23:04:53.815 [main] DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Product 2, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@1b0bdc8: insert into products (sku_number, name, amount) values (2, 'Product 1', 10.00)) - start
23:04:53.817 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Product 2) - start
23:04:53.818 [main] DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Product 2) - start
23:04:53.818 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=amount) - start
23:04:53.818 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:53.818 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:53.818 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
23:04:53.819 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:53.819 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=10.00, dataType=DECIMAL) - start
23:04:53.819 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=10.00, dataType=DECIMAL) - start
23:04:53.819 [main] DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=10.00, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@1b0bdc8: insert into products (sku_number, name, amount) values (2, 'Product 2', 10.00)) - start
23:04:53.821 [main] DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=10.00) - start
23:04:53.821 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start
23:04:53.821 [main] DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start
23:04:53.837 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=2) - start
23:04:53.837 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=sku_number) - start
23:04:53.837 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:53.924 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:53.924 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=sku_number) - start
23:04:53.924 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:53.924 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
23:04:53.924 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:53.925 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:53.925 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
23:04:53.925 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:53.925 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=amount) - start
23:04:53.925 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:53.925 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:53.927 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
23:04:53.927 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:53.927 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=sku_number) - start
23:04:53.927 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:53.927 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:53.928 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=sku_number) - start
23:04:53.928 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:53.928 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=3, dataType=INTEGER) - start
23:04:53.928 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=3, dataType=INTEGER) - start
23:04:53.929 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=3, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@1b0bdc8: insert into products (sku_number, name, amount) values (2, 'Product 2', 10.00)) - start
23:04:53.930 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=3) - start
23:04:53.930 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=3) - start
23:04:53.930 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
23:04:53.930 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:53.930 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:53.930 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
23:04:53.931 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:53.932 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Product 3, dataType=VARCHAR) - start
23:04:53.932 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Product 3, dataType=VARCHAR) - start
23:04:53.932 [main] DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Product 3, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@1b0bdc8: insert into products (sku_number, name, amount) values (3, 'Product 2', 10.00)) - start
23:04:53.934 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Product 3) - start
23:04:53.934 [main] DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Product 3) - start
23:04:53.934 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=amount) - start
23:04:53.934 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:53.934 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:53.934 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
23:04:53.935 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:53.935 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=10.00, dataType=DECIMAL) - start
23:04:53.935 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=10.00, dataType=DECIMAL) - start
23:04:53.935 [main] DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=10.00, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@1b0bdc8: insert into products (sku_number, name, amount) values (3, 'Product 3', 10.00)) - start
23:04:53.937 [main] DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=10.00) - start
23:04:53.937 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start
23:04:53.937 [main] DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start
23:04:53.962 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=3) - start
23:04:53.962 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=sku_number) - start
23:04:53.962 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:54.040 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:54.040 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=sku_number) - start
23:04:54.040 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:54.040 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
23:04:54.040 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:54.041 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:54.041 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
23:04:54.041 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:54.041 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=amount) - start
23:04:54.041 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:54.041 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:54.042 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
23:04:54.042 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:54.043 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=sku_number) - start
23:04:54.043 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:54.043 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:54.044 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=sku_number) - start
23:04:54.044 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:54.044 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=4, dataType=INTEGER) - start
23:04:54.044 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=4, dataType=INTEGER) - start
23:04:54.044 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=4, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@1b0bdc8: insert into products (sku_number, name, amount) values (3, 'Product 3', 10.00)) - start
23:04:54.046 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=4) - start
23:04:54.046 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=4) - start
23:04:54.046 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
23:04:54.046 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:54.046 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:54.046 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
23:04:54.047 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:54.047 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=Product 4, dataType=VARCHAR) - start
23:04:54.047 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=Product 4, dataType=VARCHAR) - start
23:04:54.047 [main] DEBUG o.d.dataset.datatype.StringDataType - setSqlValue(value=Product 4, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@1b0bdc8: insert into products (sku_number, name, amount) values (4, 'Product 3', 10.00)) - start
23:04:54.051 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Product 4) - start
23:04:54.052 [main] DEBUG o.d.dataset.datatype.StringDataType - typeCast(value=Product 4) - start
23:04:54.052 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=amount) - start
23:04:54.052 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:54.052 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:54.052 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
23:04:54.151 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:54.151 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=10.00, dataType=DECIMAL) - start
23:04:54.151 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=10.00, dataType=DECIMAL) - start
23:04:54.151 [main] DEBUG o.d.dataset.datatype.NumberDataType - setSqlValue(value=10.00, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@1b0bdc8: insert into products (sku_number, name, amount) values (4, 'Product 4', 10.00)) - start
23:04:54.152 [main] DEBUG o.d.dataset.datatype.NumberDataType - typeCast(value=10.00) - start
23:04:54.152 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start
23:04:54.152 [main] DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start
23:04:54.184 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=4) - start
23:04:54.184 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=sku_number) - start
23:04:54.184 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
23:04:54.255 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=4) - start
23:04:54.255 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - executeBatch() - start
23:04:54.255 [main] DEBUG o.d.d.s.SimplePreparedStatement - executeBatch() - start
23:04:54.255 [main] DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start
23:04:54.255 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - clearBatch() - start
23:04:54.255 [main] DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start
23:04:54.256 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - close() - start
23:04:54.256 [main] DEBUG o.d.d.s.AbstractPreparedBatchStatement - close() - start
23:04:54.256 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:54.256 [main] DEBUG o.d.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]) - start
23:04:54.258 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
23:04:54.258 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:54.258 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:54.258 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:54.258 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:54.258 [main] DEBUG o.dbunit.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:54.259 [main] DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start
23:04:54.259 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=inventory_items) - start
23:04:54.259 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:54.259 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:54.259 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:54.261 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:54.261 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:54.261 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:54.261 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:54.261 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:54.266 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:54.266 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:54.266 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:54.266 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:54.266 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:54.266 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:54.268 [main] DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start
23:04:54.269 [main] DEBUG org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=0) - start
23:04:54.269 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
23:04:54.270 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:54.270 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:54.270 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:54.270 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:54.270 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=product_sku_number) - start
23:04:54.271 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:54.271 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:54.271 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:54.271 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:54.271 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=inventory_id) - start
23:04:54.273 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:54.273 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:54.273 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:54.273 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:54.273 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=quantity) - start
23:04:54.274 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:54.274 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:54.274 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:54.274 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:54.274 [main] DEBUG org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=inventory_items, columns=[(id, INTEGER, noNulls), (product_sku_number, INTEGER, noNulls), (inventory_id, INTEGER, noNulls), (quantity, INTEGER, noNulls)], keys=[(id, INTEGER, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:54.276 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=, name=inventory_items, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:54.278 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:54.278 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=inventory_items, escapePattern=null) - start
23:04:54.278 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=id, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:54.282 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:54.282 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start
23:04:54.282 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=product_sku_number, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:54.286 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:54.286 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=product_sku_number, escapePattern=null) - start
23:04:54.286 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=inventory_id, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:54.291 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:54.291 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=inventory_id, escapePattern=null) - start
23:04:54.291 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=quantity, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:54.295 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:54.295 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=quantity, escapePattern=null) - start
23:04:54.295 [main] DEBUG o.d.d.s.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:54.300 [main] DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:54.305 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
23:04:54.305 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:54.305 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:54.305 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:54.305 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:54.305 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
23:04:54.308 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
23:04:54.308 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@aeea66: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
23:04:54.308 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:54.313 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:54.313 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=product_sku_number) - start
23:04:54.313 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:54.314 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:54.314 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:54.315 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:54.315 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
23:04:54.315 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
23:04:54.315 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@aeea66: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (1, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
23:04:54.316 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:54.316 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:54.316 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=inventory_id) - start
23:04:54.317 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:54.317 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:54.317 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:54.318 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:54.318 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
23:04:54.318 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
23:04:54.318 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@aeea66: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (1, 1, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
23:04:54.320 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:54.320 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:54.320 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=quantity) - start
23:04:54.320 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:54.320 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:54.320 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:54.321 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:54.321 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=0, dataType=INTEGER) - start
23:04:54.321 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=0, dataType=INTEGER) - start
23:04:54.321 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=0, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@aeea66: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (1, 1, 1, ** NOT SPECIFIED **)) - start
23:04:54.323 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=0) - start
23:04:54.323 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=0) - start
23:04:54.323 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start
23:04:54.323 [main] DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start
23:04:54.344 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=1) - start
23:04:54.344 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
23:04:54.344 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:54.427 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:54.427 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:54.427 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:54.427 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=product_sku_number) - start
23:04:54.427 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:54.428 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:54.428 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:54.428 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:54.428 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=inventory_id) - start
23:04:54.428 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:54.429 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:54.430 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:54.430 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:54.430 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=quantity) - start
23:04:54.430 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:54.431 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:54.431 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:54.431 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:54.431 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
23:04:54.431 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:54.433 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:54.433 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:54.433 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:54.433 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=2, dataType=INTEGER) - start
23:04:54.433 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=2, dataType=INTEGER) - start
23:04:54.434 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=2, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@aeea66: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (1, 1, 1, 0)) - start
23:04:54.434 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=2) - start
23:04:54.434 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=2) - start
23:04:54.434 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=product_sku_number) - start
23:04:54.436 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:54.436 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:54.436 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:54.436 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:54.436 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=2, dataType=INTEGER) - start
23:04:54.437 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=2, dataType=INTEGER) - start
23:04:54.438 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=2, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@aeea66: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (2, 1, 1, 0)) - start
23:04:54.438 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=2) - start
23:04:54.438 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=2) - start
23:04:54.439 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=inventory_id) - start
23:04:54.439 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:54.439 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:54.439 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:54.439 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:54.441 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
23:04:54.441 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
23:04:54.441 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@aeea66: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (2, 2, 1, 0)) - start
23:04:54.441 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:54.442 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:54.442 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=quantity) - start
23:04:54.442 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:54.442 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:54.442 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:54.442 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:54.444 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=10, dataType=INTEGER) - start
23:04:54.444 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=10, dataType=INTEGER) - start
23:04:54.444 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=10, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@aeea66: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (2, 2, 1, 0)) - start
23:04:54.444 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=10) - start
23:04:54.446 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=10) - start
23:04:54.446 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start
23:04:54.446 [main] DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start
23:04:54.468 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=2) - start
23:04:54.468 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start
23:04:54.468 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:54.548 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:54.548 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:54.548 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:54.548 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=product_sku_number) - start
23:04:54.548 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:54.549 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:54.549 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:54.549 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:54.549 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=inventory_id) - start
23:04:54.549 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:54.551 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:54.551 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:54.551 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:54.551 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=quantity) - start
23:04:54.551 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:54.552 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:54.552 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:54.552 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:54.552 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start
23:04:54.552 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:54.554 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:54.554 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:54.554 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:54.554 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=3, dataType=INTEGER) - start
23:04:54.554 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=3, dataType=INTEGER) - start
23:04:54.555 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=3, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@aeea66: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (2, 2, 1, 10)) - start
23:04:54.555 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=3) - start
23:04:54.555 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=3) - start
23:04:54.556 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=product_sku_number) - start
23:04:54.557 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:54.557 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:54.557 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:54.557 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:54.557 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=3, dataType=INTEGER) - start
23:04:54.558 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=3, dataType=INTEGER) - start
23:04:54.559 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=3, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@aeea66: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (3, 2, 1, 10)) - start
23:04:54.559 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=3) - start
23:04:54.559 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=3) - start
23:04:54.560 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=inventory_id) - start
23:04:54.560 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:54.560 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:54.560 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:54.560 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:54.562 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
23:04:54.562 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
23:04:54.562 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@aeea66: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (3, 3, 1, 10)) - start
23:04:54.562 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:54.563 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:54.563 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=quantity) - start
23:04:54.563 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:54.563 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:54.563 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:54.563 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:54.564 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=0, dataType=INTEGER) - start
23:04:54.564 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=0, dataType=INTEGER) - start
23:04:54.564 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=0, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@aeea66: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (3, 3, 1, 10)) - start
23:04:54.564 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=0) - start
23:04:54.567 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=0) - start
23:04:54.567 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start
23:04:54.567 [main] DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start
23:04:54.602 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=3) - start
23:04:54.602 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start
23:04:54.602 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:54.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:54.670 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:54.670 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:54.670 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=product_sku_number) - start
23:04:54.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:54.671 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:54.671 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:54.671 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:54.671 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=inventory_id) - start
23:04:54.671 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:54.673 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:54.673 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:54.673 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:54.673 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=quantity) - start
23:04:54.673 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:54.674 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:54.674 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:54.674 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:54.674 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start
23:04:54.674 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:54.676 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:54.676 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:54.676 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:54.676 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=4, dataType=INTEGER) - start
23:04:54.676 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=4, dataType=INTEGER) - start
23:04:54.677 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=4, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@aeea66: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (3, 3, 1, 0)) - start
23:04:54.677 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=4) - start
23:04:54.677 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=4) - start
23:04:54.677 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=product_sku_number) - start
23:04:54.679 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:54.679 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:54.679 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:54.679 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:54.679 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=4, dataType=INTEGER) - start
23:04:54.680 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=4, dataType=INTEGER) - start
23:04:54.680 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=4, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@aeea66: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (4, 3, 1, 0)) - start
23:04:54.680 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=4) - start
23:04:54.680 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=4) - start
23:04:54.682 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=inventory_id) - start
23:04:54.682 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:54.682 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:54.682 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:54.682 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:54.684 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
23:04:54.684 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
23:04:54.684 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@aeea66: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (4, 4, 1, 0)) - start
23:04:54.684 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:54.685 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:54.685 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=quantity) - start
23:04:54.685 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:54.685 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:54.685 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:54.685 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:54.687 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addValue(value=30, dataType=INTEGER) - start
23:04:54.687 [main] DEBUG o.d.d.s.SimplePreparedStatement - addValue(value=30, dataType=INTEGER) - start
23:04:54.687 [main] DEBUG o.d.dataset.datatype.IntegerDataType - setSqlValue(value=30, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@aeea66: insert into inventory_items (id, product_sku_number, inventory_id, quantity) values (4, 4, 1, 0)) - start
23:04:54.687 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=30) - start
23:04:54.688 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=30) - start
23:04:54.689 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - addBatch() - start
23:04:54.689 [main] DEBUG o.d.d.s.SimplePreparedStatement - addBatch() - start
23:04:54.707 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], row=4) - start
23:04:54.707 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start
23:04:54.707 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
23:04:54.792 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=4) - start
23:04:54.792 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - executeBatch() - start
23:04:54.792 [main] DEBUG o.d.d.s.SimplePreparedStatement - executeBatch() - start
23:04:54.792 [main] DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start
23:04:54.792 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - clearBatch() - start
23:04:54.792 [main] DEBUG o.d.d.s.SimplePreparedStatement - clearBatch() - start
23:04:54.793 [main] DEBUG o.d.d.s.AutomaticPreparedBatchStatement - close() - start
23:04:54.793 [main] DEBUG o.d.d.s.AbstractPreparedBatchStatement - close() - start
23:04:54.793 [main] DEBUG org.dbunit.DefaultOperationListener - operationSetUpFinished(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:54.794 [main] DEBUG org.dbunit.DefaultOperationListener - closeConnection(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@b122a1, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@1589e56, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:54.796 [main] DEBUG o.dbunit.database.DatabaseConnection - close() - start
23:04:54.887 [main] DEBUG org.dbunit.DBTestCase - getConnection() - start
23:04:54.887 [main] DEBUG org.dbunit.JdbcDatabaseTester - getConnection() - start
23:04:54.887 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=connectionUrl, property=jdbc:mysql://127.0.0.1/orderingsystem_test) - start
23:04:54.894 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName= (dbIdentifierQuoteString=`)
23:04:54.894 [main] DEBUG o.dbunit.database.DatabaseConnection - Database connection info: 
	database product name=MySQL
	database version=5.5.2-m2-community
	database major version=5
	database minor version=5
	jdbc driver name=MySQL-AB JDBC Driver
	jdbc driver version=mysql-connector-java-5.1.16 ( Revision: ${bzr.revision-id} )
	jdbc driver major version=5
	jdbc driver minor version=1

23:04:54.904 [main] DEBUG o.dbunit.database.DatabaseConnection - validateSchema(validateStrict=false) - start
23:04:54.905 [main] WARN  o.dbunit.database.DatabaseConnection - The given schema '' does not exist.
23:04:54.905 [main] DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start
23:04:54.905 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTable(tableName=inventory_items) - start
23:04:54.905 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:54.905 [main] DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database...
23:04:54.909 [main] DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=MySQL
	database version=5.5.2-m2-community
	database major version=5
	database minor version=5
	jdbc driver name=MySQL-AB JDBC Driver
	jdbc driver version=mysql-connector-java-5.1.16 ( Revision: ${bzr.revision-id} )
	jdbc driver major version=5
	jdbc driver minor version=1

23:04:54.909 [main] DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=com.mysql.jdbc.JDBC4ResultSet@14acfcd
23:04:54.909 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@90d8ea, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:55.009 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:55.009 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=customers, escapePattern=null) - start
23:04:55.009 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=customers, object=null) - start
23:04:55.009 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=customers) - start
23:04:55.009 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=customers) - end - result=CUSTOMERS
23:04:55.010 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CUSTOMERS) - start
23:04:55.010 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CUSTOMERS) - end - result=CUSTOMERS
23:04:55.011 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@90d8ea, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:55.015 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:55.015 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=inventories, escapePattern=null) - start
23:04:55.015 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventories, object=null) - start
23:04:55.015 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.015 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.016 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - start
23:04:55.016 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - end - result=INVENTORIES
23:04:55.016 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@90d8ea, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:55.021 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:55.021 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=inventory_items, escapePattern=null) - start
23:04:55.021 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventory_items, object=null) - start
23:04:55.021 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.021 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.022 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - start
23:04:55.022 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - end - result=INVENTORY_ITEMS
23:04:55.022 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@90d8ea, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:55.027 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:55.027 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=order_items, escapePattern=null) - start
23:04:55.027 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=order_items, object=null) - start
23:04:55.027 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=order_items) - start
23:04:55.027 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=order_items) - end - result=ORDER_ITEMS
23:04:55.028 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDER_ITEMS) - start
23:04:55.028 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDER_ITEMS) - end - result=ORDER_ITEMS
23:04:55.028 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@90d8ea, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:55.033 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:55.033 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=orders, escapePattern=null) - start
23:04:55.033 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=orders, object=null) - start
23:04:55.033 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=orders) - start
23:04:55.033 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=orders) - end - result=ORDERS
23:04:55.034 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDERS) - start
23:04:55.034 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDERS) - end - result=ORDERS
23:04:55.034 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@90d8ea, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:55.038 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:55.038 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=products, escapePattern=null) - start
23:04:55.038 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=products, object=null) - start
23:04:55.038 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.038 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.039 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - start
23:04:55.039 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - end - result=PRODUCTS
23:04:55.039 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=inventory_items) - start
23:04:55.039 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:55.039 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.044 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.044 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.044 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.044 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=inventory_items (dbIdentifierQuoteString=`)
23:04:55.046 [main] DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'inventory_items' exists in schema '' ...
23:04:55.047 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=com.mysql.jdbc.JDBC4ResultSet@53ab04) - start
23:04:55.047 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - update(tableName=inventory_items, object=table=inventory_items, cols=[(id, INTEGER, noNulls), (product_sku_number, INTEGER, noNulls), (inventory_id, INTEGER, noNulls), (quantity, INTEGER, noNulls)], pk=[(id, INTEGER, noNulls)]) - start
23:04:55.056 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.056 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.148 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.148 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.150 [main] DEBUG o.d.d.DatabaseConfig$Configurator - Statement fetch size set to 100
23:04:55.150 [main] DEBUG org.dbunit.database.DatabaseDataSet - getSelectStatement(schema=, metaData=table=inventory_items, cols=[(id, INTEGER, noNulls), (product_sku_number, INTEGER, noNulls), (inventory_id, INTEGER, noNulls), (quantity, INTEGER, noNulls)], pk=[(id, INTEGER, noNulls)], escapePattern=null) - start
23:04:55.150 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.150 [main] DEBUG o.d.database.DatabaseTableMetaData - getPrimaryKeys() - start
23:04:55.150 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:55.150 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start
23:04:55.150 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:55.150 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=product_sku_number, escapePattern=null) - start
23:04:55.150 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:55.150 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=inventory_id, escapePattern=null) - start
23:04:55.150 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:55.150 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=quantity, escapePattern=null) - start
23:04:55.150 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:55.153 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=inventory_items, escapePattern=null) - start
23:04:55.153 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:55.153 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start
23:04:55.153 [main] DEBUG o.d.database.AbstractResultSetTable - Query: select id, product_sku_number, inventory_id, quantity from inventory_items order by id
23:04:55.156 [main] DEBUG org.dbunit.dataset.DefaultTable - addTableRows(table=org.dbunit.database.ForwardOnlyResultSetTable@171f189) - start
23:04:55.156 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.156 [main] DEBUG o.d.d.ForwardOnlyResultSetTable - getValue(row=0, columnName=id) - start
23:04:55.156 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:55.156 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.156 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.156 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.156 [main] DEBUG o.d.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=com.mysql.jdbc.JDBC4ResultSet@1a897a9) - start
23:04:55.156 [main] DEBUG o.d.d.ForwardOnlyResultSetTable - getValue(row=0, columnName=product_sku_number) - start
23:04:55.156 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:55.158 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.158 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.158 [main] DEBUG o.d.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=com.mysql.jdbc.JDBC4ResultSet@1a897a9) - start
23:04:55.158 [main] DEBUG o.d.d.ForwardOnlyResultSetTable - getValue(row=0, columnName=inventory_id) - start
23:04:55.158 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:55.159 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.159 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.159 [main] DEBUG o.d.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=com.mysql.jdbc.JDBC4ResultSet@1a897a9) - start
23:04:55.159 [main] DEBUG o.d.d.ForwardOnlyResultSetTable - getValue(row=0, columnName=quantity) - start
23:04:55.159 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:55.161 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.161 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.161 [main] DEBUG o.d.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=com.mysql.jdbc.JDBC4ResultSet@1a897a9) - start
23:04:55.161 [main] DEBUG o.d.d.ForwardOnlyResultSetTable - getValue(row=1, columnName=id) - start
23:04:55.161 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:55.163 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.163 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.163 [main] DEBUG o.d.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=com.mysql.jdbc.JDBC4ResultSet@1a897a9) - start
23:04:55.163 [main] DEBUG o.d.d.ForwardOnlyResultSetTable - getValue(row=1, columnName=product_sku_number) - start
23:04:55.163 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:55.164 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.165 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.165 [main] DEBUG o.d.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=com.mysql.jdbc.JDBC4ResultSet@1a897a9) - start
23:04:55.165 [main] DEBUG o.d.d.ForwardOnlyResultSetTable - getValue(row=1, columnName=inventory_id) - start
23:04:55.165 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:55.166 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.166 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.166 [main] DEBUG o.d.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=com.mysql.jdbc.JDBC4ResultSet@1a897a9) - start
23:04:55.166 [main] DEBUG o.d.d.ForwardOnlyResultSetTable - getValue(row=1, columnName=quantity) - start
23:04:55.166 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:55.168 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.168 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.168 [main] DEBUG o.d.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=com.mysql.jdbc.JDBC4ResultSet@1a897a9) - start
23:04:55.168 [main] DEBUG o.d.d.ForwardOnlyResultSetTable - getValue(row=2, columnName=id) - start
23:04:55.168 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:55.169 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.169 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.169 [main] DEBUG o.d.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=com.mysql.jdbc.JDBC4ResultSet@1a897a9) - start
23:04:55.169 [main] DEBUG o.d.d.ForwardOnlyResultSetTable - getValue(row=2, columnName=product_sku_number) - start
23:04:55.169 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:55.171 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.171 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.171 [main] DEBUG o.d.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=com.mysql.jdbc.JDBC4ResultSet@1a897a9) - start
23:04:55.171 [main] DEBUG o.d.d.ForwardOnlyResultSetTable - getValue(row=2, columnName=inventory_id) - start
23:04:55.171 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:55.173 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.173 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.173 [main] DEBUG o.d.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=com.mysql.jdbc.JDBC4ResultSet@1a897a9) - start
23:04:55.173 [main] DEBUG o.d.d.ForwardOnlyResultSetTable - getValue(row=2, columnName=quantity) - start
23:04:55.173 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:55.174 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.174 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.174 [main] DEBUG o.d.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=com.mysql.jdbc.JDBC4ResultSet@1a897a9) - start
23:04:55.174 [main] DEBUG o.d.d.ForwardOnlyResultSetTable - getValue(row=3, columnName=id) - start
23:04:55.174 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:55.176 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.176 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.176 [main] DEBUG o.d.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=com.mysql.jdbc.JDBC4ResultSet@1a897a9) - start
23:04:55.176 [main] DEBUG o.d.d.ForwardOnlyResultSetTable - getValue(row=3, columnName=product_sku_number) - start
23:04:55.176 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:55.177 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.177 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.178 [main] DEBUG o.d.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=com.mysql.jdbc.JDBC4ResultSet@1a897a9) - start
23:04:55.178 [main] DEBUG o.d.d.ForwardOnlyResultSetTable - getValue(row=3, columnName=inventory_id) - start
23:04:55.178 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:55.179 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.179 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.179 [main] DEBUG o.d.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=com.mysql.jdbc.JDBC4ResultSet@1a897a9) - start
23:04:55.179 [main] DEBUG o.d.d.ForwardOnlyResultSetTable - getValue(row=3, columnName=quantity) - start
23:04:55.179 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:55.181 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.181 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.181 [main] DEBUG o.d.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=com.mysql.jdbc.JDBC4ResultSet@1a897a9) - start
23:04:55.181 [main] DEBUG o.d.d.ForwardOnlyResultSetTable - getValue(row=4, columnName=id) - start
23:04:55.181 [main] DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
23:04:55.182 [main] DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
23:04:55.182 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
23:04:55.183 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - produce() - start
23:04:55.183 [main] DEBUG o.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=org.apache.xerces.parsers.SAXParser@17cec96, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@90832e) - start
23:04:55.184 [main] DEBUG o.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=org.apache.xerces.parsers.SAXParser@17cec96, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@90832e) - start
23:04:55.188 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@8a548b) - start
23:04:55.188 [main] DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start
23:04:55.188 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventories, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@8a548b) - start
23:04:55.188 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.288 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventories) - start
23:04:55.288 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.288 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.288 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=inventories, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@8a548b) - start
23:04:55.290 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown)]) - start
23:04:55.290 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventories, object=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:55.290 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.290 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.291 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - start
23:04:55.291 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - end - result=INVENTORIES
23:04:55.291 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:55.291 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.291 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.293 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.293 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.293 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.293 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.293 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.295 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
23:04:55.295 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
23:04:55.295 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventories) - start
23:04:55.295 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@8a548b) - start
23:04:55.295 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.296 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.296 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.296 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:55.296 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.296 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.298 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.298 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.298 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.298 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
23:04:55.298 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.300 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.300 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventories, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
23:04:55.300 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.300 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.302 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - start
23:04:55.302 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - end - result=INVENTORIES
23:04:55.302 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.302 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.302 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@8a548b) - start
23:04:55.303 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)]) - start
23:04:55.304 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=products, object=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:55.304 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.305 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.305 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - start
23:04:55.305 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - end - result=PRODUCTS
23:04:55.305 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:55.307 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.307 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.307 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.307 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:55.307 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:55.308 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:55.308 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.308 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.308 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.309 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
23:04:55.309 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
23:04:55.310 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:55.310 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@8a548b) - start
23:04:55.310 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.310 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.312 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.312 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:55.312 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.312 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.312 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.314 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.314 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.314 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.314 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.314 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.315 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:55.315 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:55.316 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:55.316 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.316 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.317 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.317 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=2) - start
23:04:55.317 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=2) - start
23:04:55.317 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:55.317 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@8a548b) - start
23:04:55.319 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.319 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.319 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.319 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:55.319 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.320 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.320 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.320 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.320 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.320 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.322 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.322 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.322 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:55.322 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:55.322 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:55.324 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.324 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.324 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.324 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=3) - start
23:04:55.324 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=3) - start
23:04:55.324 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:55.326 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@8a548b) - start
23:04:55.326 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.326 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.326 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.327 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:55.327 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.327 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.328 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.328 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.329 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.329 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.329 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.329 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.329 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:55.331 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:55.331 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:55.331 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.331 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.331 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.333 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=4) - start
23:04:55.333 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=4) - start
23:04:55.333 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:55.333 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@8a548b) - start
23:04:55.333 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.335 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.335 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.335 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:55.335 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.335 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.336 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.336 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.336 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.336 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
23:04:55.336 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.338 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.338 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=products, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]) - start
23:04:55.338 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.340 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.340 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - start
23:04:55.340 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - end - result=PRODUCTS
23:04:55.340 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.340 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.341 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@8a548b) - start
23:04:55.341 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)]) - start
23:04:55.341 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventory_items, object=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:55.343 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.343 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.343 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - start
23:04:55.343 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - end - result=INVENTORY_ITEMS
23:04:55.343 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:55.345 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.345 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.345 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.345 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.345 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.347 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.347 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.347 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.347 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.347 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.349 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
23:04:55.350 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
23:04:55.351 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:55.352 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@8a548b) - start
23:04:55.352 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.352 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.452 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.452 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:55.452 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.453 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.453 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.453 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.453 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.453 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.453 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.453 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.455 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.455 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.455 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.455 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.455 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.457 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.457 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.457 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=2) - start
23:04:55.457 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=2) - start
23:04:55.457 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:55.459 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@8a548b) - start
23:04:55.459 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.459 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.459 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.460 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:55.460 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.460 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.460 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.460 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.462 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.462 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.462 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.462 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.462 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.464 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.467 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.467 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.467 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.467 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.467 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.567 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=3) - start
23:04:55.567 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=3) - start
23:04:55.567 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:55.567 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@8a548b) - start
23:04:55.567 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.568 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.568 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.568 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:55.568 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.568 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.570 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.570 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.570 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.570 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.570 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.572 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.572 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.572 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.572 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.572 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.574 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.574 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.574 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.574 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=4) - start
23:04:55.574 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=4) - start
23:04:55.575 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:55.575 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
23:04:55.575 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.575 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.575 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.577 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
23:04:55.577 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.577 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.577 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventory_items, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]) - start
23:04:55.579 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.579 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.579 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - start
23:04:55.579 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - end - result=INVENTORY_ITEMS
23:04:55.579 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start
23:04:55.580 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[inventories, products, inventory_items], _tableMap={INVENTORY_ITEMS=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], INVENTORIES=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], PRODUCTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]}, _caseSensitiveTableNames=false]
23:04:55.582 [main] DEBUG org.dbunit.dataset.AbstractDataSet - getTable(tableName=inventory_items) - start
23:04:55.582 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
23:04:55.582 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
23:04:55.582 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
23:04:55.583 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.583 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.583 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.583 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.583 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.583 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.583 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:55.586 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventories, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
23:04:55.586 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.586 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.586 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - start
23:04:55.588 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - end - result=INVENTORIES
23:04:55.588 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:55.588 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=products, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]) - start
23:04:55.589 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.589 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.589 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - start
23:04:55.589 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - end - result=PRODUCTS
23:04:55.589 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:55.590 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventory_items, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]) - start
23:04:55.590 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.590 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.592 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - start
23:04:55.593 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - end - result=INVENTORY_ITEMS
23:04:55.593 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.593 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.595 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals(expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=inventory_items, cols=[(id, INTEGER, noNulls), (product_sku_number, INTEGER, noNulls), (inventory_id, INTEGER, noNulls), (quantity, INTEGER, noNulls)], pk=[(id, INTEGER, noNulls)], _rowList.size()=4]) - start
23:04:55.596 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals(expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=inventory_items, cols=[(id, INTEGER, noNulls), (product_sku_number, INTEGER, noNulls), (inventory_id, INTEGER, noNulls), (quantity, INTEGER, noNulls)], pk=[(id, INTEGER, noNulls)], _rowList.size()=4], additionalColumnInfo=null) - start
23:04:55.596 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]
23:04:55.596 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=inventory_items, cols=[(id, INTEGER, noNulls), (product_sku_number, INTEGER, noNulls), (inventory_id, INTEGER, noNulls), (quantity, INTEGER, noNulls)], pk=[(id, INTEGER, noNulls)], _rowList.size()=4]
23:04:55.597 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: failureHandler=null
23:04:55.597 [main] DEBUG org.dbunit.assertion.DbUnitAssert - FailureHandler is null. Using default implementation
23:04:55.597 [main] DEBUG org.dbunit.dataset.Columns - getSortedColumns(metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:55.598 [main] DEBUG o.d.dataset.Columns$ColumnComparator - compare(o1=(id, UNKNOWN, nullableUnknown), o2=(product_sku_number, UNKNOWN, nullableUnknown)) - start
23:04:55.600 [main] DEBUG o.d.dataset.Columns$ColumnComparator - compare(o1=(product_sku_number, UNKNOWN, nullableUnknown), o2=(inventory_id, UNKNOWN, nullableUnknown)) - start
23:04:55.600 [main] DEBUG o.d.dataset.Columns$ColumnComparator - compare(o1=(id, UNKNOWN, nullableUnknown), o2=(inventory_id, UNKNOWN, nullableUnknown)) - start
23:04:55.600 [main] DEBUG o.d.dataset.Columns$ColumnComparator - compare(o1=(product_sku_number, UNKNOWN, nullableUnknown), o2=(quantity, UNKNOWN, nullableUnknown)) - start
23:04:55.602 [main] DEBUG org.dbunit.dataset.Columns - getSortedColumns(metaData=table=inventory_items, cols=[(id, INTEGER, noNulls), (product_sku_number, INTEGER, noNulls), (inventory_id, INTEGER, noNulls), (quantity, INTEGER, noNulls)], pk=[(id, INTEGER, noNulls)]) - start
23:04:55.602 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.602 [main] DEBUG o.d.dataset.Columns$ColumnComparator - compare(o1=(id, INTEGER, noNulls), o2=(product_sku_number, INTEGER, noNulls)) - start
23:04:55.603 [main] DEBUG o.d.dataset.Columns$ColumnComparator - compare(o1=(product_sku_number, INTEGER, noNulls), o2=(inventory_id, INTEGER, noNulls)) - start
23:04:55.603 [main] DEBUG o.d.dataset.Columns$ColumnComparator - compare(o1=(id, INTEGER, noNulls), o2=(inventory_id, INTEGER, noNulls)) - start
23:04:55.603 [main] DEBUG o.d.dataset.Columns$ColumnComparator - compare(o1=(product_sku_number, INTEGER, noNulls), o2=(quantity, INTEGER, noNulls)) - start
23:04:55.604 [main] DEBUG o.d.database.DatabaseTableMetaData - getColumns() - start
23:04:55.604 [main] DEBUG o.dbunit.dataset.Columns$ColumnDiff - findMissingColumnsIn(metaDataToCheck=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], columnsToSearch=[(id, INTEGER, noNulls), (product_sku_number, INTEGER, noNulls), (inventory_id, INTEGER, noNulls), (quantity, INTEGER, noNulls)])
23:04:55.605 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.606 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.606 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.606 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.606 [main] DEBUG o.dbunit.dataset.Columns$ColumnDiff - findMissingColumnsIn(metaDataToCheck=table=inventory_items, cols=[(id, INTEGER, noNulls), (product_sku_number, INTEGER, noNulls), (inventory_id, INTEGER, noNulls), (quantity, INTEGER, noNulls)], pk=[(id, INTEGER, noNulls)], columnsToSearch=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)])
23:04:55.607 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.607 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.607 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.607 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.608 [main] DEBUG o.d.a.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=inventory_items, expectedColumn=(id, UNKNOWN, nullableUnknown), actualColumn=(id, INTEGER, noNulls), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
23:04:55.608 [main] DEBUG o.d.a.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=inventory_items, expectedColumn=(inventory_id, UNKNOWN, nullableUnknown), actualColumn=(inventory_id, INTEGER, noNulls), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
23:04:55.608 [main] DEBUG o.d.a.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=inventory_items, expectedColumn=(product_sku_number, UNKNOWN, nullableUnknown), actualColumn=(product_sku_number, INTEGER, noNulls), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
23:04:55.611 [main] DEBUG o.d.a.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=inventory_items, expectedColumn=(quantity, UNKNOWN, nullableUnknown), actualColumn=(quantity, INTEGER, noNulls), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
23:04:55.611 [main] DEBUG org.dbunit.assertion.DbUnitAssert - compareData(expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=inventory_items, cols=[(id, INTEGER, noNulls), (product_sku_number, INTEGER, noNulls), (inventory_id, INTEGER, noNulls), (quantity, INTEGER, noNulls)], pk=[(id, INTEGER, noNulls)], _rowList.size()=4], comparisonCols=[org.dbunit.assertion.DbUnitAssert$ComparisonColumn@36527f, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@6210fb, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@48edb5, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@1ee2c2c], failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
23:04:55.612 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
23:04:55.612 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:55.612 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:55.612 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:55.612 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.612 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
23:04:55.614 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:55.614 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:55.614 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:55.614 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.614 [main] DEBUG o.d.d.datatype.AbstractDataType - compare(o1=1, o2=1) - start
23:04:55.614 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:55.618 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:55.618 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:55.618 [main] DEBUG o.d.d.datatype.AbstractDataType - compareNonNulls(value1=1, value2=1) - start
23:04:55.618 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=inventory_id) - start
23:04:55.618 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:55.618 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:55.620 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:55.620 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.620 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=inventory_id) - start
23:04:55.620 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:55.620 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:55.622 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:55.622 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.622 [main] DEBUG o.d.d.datatype.AbstractDataType - compare(o1=1, o2=1) - start
23:04:55.622 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:55.622 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:55.622 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:55.623 [main] DEBUG o.d.d.datatype.AbstractDataType - compareNonNulls(value1=1, value2=1) - start
23:04:55.623 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=product_sku_number) - start
23:04:55.623 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:55.623 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:55.623 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:55.625 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.625 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=product_sku_number) - start
23:04:55.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:55.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:55.625 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:55.627 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.627 [main] DEBUG o.d.d.datatype.AbstractDataType - compare(o1=1, o2=1) - start
23:04:55.627 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:55.627 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:55.627 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:55.627 [main] DEBUG o.d.d.datatype.AbstractDataType - compareNonNulls(value1=1, value2=1) - start
23:04:55.629 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=quantity) - start
23:04:55.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:55.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:55.629 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:55.629 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.630 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=quantity) - start
23:04:55.630 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
23:04:55.630 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=4) - start
23:04:55.630 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:55.630 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.632 [main] DEBUG o.d.d.datatype.AbstractDataType - compare(o1=0, o2=0) - start
23:04:55.632 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=0) - start
23:04:55.632 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=0) - start
23:04:55.632 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=0) - start
23:04:55.632 [main] DEBUG o.d.d.datatype.AbstractDataType - compareNonNulls(value1=0, value2=0) - start
23:04:55.632 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
23:04:55.633 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:55.633 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:55.633 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:55.633 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.633 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
23:04:55.633 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:55.635 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:55.635 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:55.635 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.635 [main] DEBUG o.d.d.datatype.AbstractDataType - compare(o1=2, o2=2) - start
23:04:55.635 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=2) - start
23:04:55.635 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=2) - start
23:04:55.637 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=2) - start
23:04:55.637 [main] DEBUG o.d.d.datatype.AbstractDataType - compareNonNulls(value1=2, value2=2) - start
23:04:55.637 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=inventory_id) - start
23:04:55.637 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:55.637 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:55.637 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:55.639 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.639 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=inventory_id) - start
23:04:55.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:55.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:55.639 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:55.641 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.641 [main] DEBUG o.d.d.datatype.AbstractDataType - compare(o1=1, o2=1) - start
23:04:55.641 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:55.641 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:55.641 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:55.641 [main] DEBUG o.d.d.datatype.AbstractDataType - compareNonNulls(value1=1, value2=1) - start
23:04:55.642 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=product_sku_number) - start
23:04:55.642 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:55.642 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:55.642 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:55.642 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.644 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=product_sku_number) - start
23:04:55.644 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:55.644 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:55.644 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:55.644 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.646 [main] DEBUG o.d.d.datatype.AbstractDataType - compare(o1=2, o2=2) - start
23:04:55.646 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=2) - start
23:04:55.646 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=2) - start
23:04:55.646 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=2) - start
23:04:55.646 [main] DEBUG o.d.d.datatype.AbstractDataType - compareNonNulls(value1=2, value2=2) - start
23:04:55.646 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=quantity) - start
23:04:55.647 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:55.647 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:55.647 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:55.647 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.647 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=quantity) - start
23:04:55.649 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
23:04:55.649 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=4) - start
23:04:55.649 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:55.649 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.649 [main] DEBUG o.d.d.datatype.AbstractDataType - compare(o1=15, o2=15) - start
23:04:55.649 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=15) - start
23:04:55.650 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=15) - start
23:04:55.650 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=15) - start
23:04:55.650 [main] DEBUG o.d.d.datatype.AbstractDataType - compareNonNulls(value1=15, value2=15) - start
23:04:55.651 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start
23:04:55.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:55.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:55.652 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:55.652 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.652 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start
23:04:55.652 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:55.652 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:55.652 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:55.654 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.654 [main] DEBUG o.d.d.datatype.AbstractDataType - compare(o1=3, o2=3) - start
23:04:55.654 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=3) - start
23:04:55.654 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=3) - start
23:04:55.654 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=3) - start
23:04:55.654 [main] DEBUG o.d.d.datatype.AbstractDataType - compareNonNulls(value1=3, value2=3) - start
23:04:55.656 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=inventory_id) - start
23:04:55.656 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:55.656 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:55.656 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:55.656 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.658 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=inventory_id) - start
23:04:55.658 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:55.658 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:55.658 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:55.658 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.659 [main] DEBUG o.d.d.datatype.AbstractDataType - compare(o1=1, o2=1) - start
23:04:55.659 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:55.659 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:55.659 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:55.659 [main] DEBUG o.d.d.datatype.AbstractDataType - compareNonNulls(value1=1, value2=1) - start
23:04:55.659 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=product_sku_number) - start
23:04:55.661 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:55.661 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:55.661 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:55.661 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.661 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=product_sku_number) - start
23:04:55.663 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:55.663 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:55.663 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:55.663 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.663 [main] DEBUG o.d.d.datatype.AbstractDataType - compare(o1=3, o2=3) - start
23:04:55.664 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=3) - start
23:04:55.664 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=3) - start
23:04:55.664 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=3) - start
23:04:55.664 [main] DEBUG o.d.d.datatype.AbstractDataType - compareNonNulls(value1=3, value2=3) - start
23:04:55.664 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=quantity) - start
23:04:55.664 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:55.666 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:55.666 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:55.666 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.666 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=quantity) - start
23:04:55.666 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
23:04:55.668 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=4) - start
23:04:55.668 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:55.668 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.668 [main] DEBUG o.d.d.datatype.AbstractDataType - compare(o1=0, o2=0) - start
23:04:55.668 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=0) - start
23:04:55.668 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=0) - start
23:04:55.669 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=0) - start
23:04:55.669 [main] DEBUG o.d.d.datatype.AbstractDataType - compareNonNulls(value1=0, value2=0) - start
23:04:55.670 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start
23:04:55.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:55.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:55.670 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:55.671 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.671 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start
23:04:55.671 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:55.671 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:55.671 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
23:04:55.671 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.673 [main] DEBUG o.d.d.datatype.AbstractDataType - compare(o1=4, o2=4) - start
23:04:55.673 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=4) - start
23:04:55.673 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=4) - start
23:04:55.673 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=4) - start
23:04:55.673 [main] DEBUG o.d.d.datatype.AbstractDataType - compareNonNulls(value1=4, value2=4) - start
23:04:55.673 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=inventory_id) - start
23:04:55.675 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:55.675 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:55.675 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:55.675 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.675 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=inventory_id) - start
23:04:55.676 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:55.676 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:55.676 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=inventory_id) - start
23:04:55.676 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.676 [main] DEBUG o.d.d.datatype.AbstractDataType - compare(o1=1, o2=1) - start
23:04:55.678 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:55.678 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:55.678 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=1) - start
23:04:55.678 [main] DEBUG o.d.d.datatype.AbstractDataType - compareNonNulls(value1=1, value2=1) - start
23:04:55.678 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=product_sku_number) - start
23:04:55.678 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:55.680 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:55.680 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:55.680 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.680 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=product_sku_number) - start
23:04:55.680 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:55.681 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:55.681 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=product_sku_number) - start
23:04:55.681 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.681 [main] DEBUG o.d.d.datatype.AbstractDataType - compare(o1=4, o2=4) - start
23:04:55.681 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=4) - start
23:04:55.683 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=4) - start
23:04:55.683 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=4) - start
23:04:55.683 [main] DEBUG o.d.d.datatype.AbstractDataType - compareNonNulls(value1=4, value2=4) - start
23:04:55.683 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=quantity) - start
23:04:55.683 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:55.683 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:55.684 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:55.684 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.684 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=quantity) - start
23:04:55.685 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
23:04:55.685 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=4) - start
23:04:55.686 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=quantity) - start
23:04:55.686 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.686 [main] DEBUG o.d.d.datatype.AbstractDataType - compare(o1=10, o2=10) - start
23:04:55.686 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=10) - start
23:04:55.686 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=10) - start
23:04:55.686 [main] DEBUG o.d.dataset.datatype.IntegerDataType - typeCast(value=10) - start
23:04:55.688 [main] DEBUG o.d.d.datatype.AbstractDataType - compareNonNulls(value1=10, value2=10) - start
23:04:55.688 [main] DEBUG org.dbunit.DatabaseTestCase - tearDown() - start
23:04:55.688 [main] DEBUG org.dbunit.AbstractDatabaseTester - setTearDownOperation(tearDownOperation=org.dbunit.operation.DeleteAllOperation@19b1de) - start
23:04:55.688 [main] DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
23:04:55.690 [main] DEBUG o.d.d.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
23:04:55.690 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
23:04:55.691 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - produce() - start
23:04:55.692 [main] DEBUG o.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=org.apache.xerces.parsers.SAXParser@1963b3e, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@b6548) - start
23:04:55.692 [main] DEBUG o.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=org.apache.xerces.parsers.SAXParser@1963b3e, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@b6548) - start
23:04:55.692 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@269997) - start
23:04:55.693 [main] DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start
23:04:55.694 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventories, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@269997) - start
23:04:55.694 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.694 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventories) - start
23:04:55.694 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.695 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.695 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=inventories, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@269997) - start
23:04:55.695 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown)]) - start
23:04:55.695 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventories, object=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:55.698 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.698 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.698 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - start
23:04:55.698 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - end - result=INVENTORIES
23:04:55.698 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:55.699 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.699 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.700 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.700 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.700 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.701 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.701 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.701 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
23:04:55.701 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
23:04:55.701 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventories) - start
23:04:55.703 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@269997) - start
23:04:55.703 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.703 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.703 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.704 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:55.704 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.705 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.705 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.705 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.706 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.706 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
23:04:55.706 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.706 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.706 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventories, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
23:04:55.708 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:55.708 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:55.708 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - start
23:04:55.708 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - end - result=INVENTORIES
23:04:55.708 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.710 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.710 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@269997) - start
23:04:55.710 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)]) - start
23:04:55.711 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=products, object=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:55.711 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.711 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.711 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - start
23:04:55.713 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - end - result=PRODUCTS
23:04:55.713 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:55.713 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.713 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.715 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.715 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:55.715 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:55.715 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:55.715 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.716 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.716 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.716 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
23:04:55.716 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
23:04:55.716 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:55.718 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@269997) - start
23:04:55.718 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.718 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.718 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.719 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:55.719 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.719 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.719 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.719 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.721 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.721 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.721 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.721 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.721 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:55.723 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:55.723 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:55.723 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.723 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.723 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.724 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=2) - start
23:04:55.724 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=2) - start
23:04:55.724 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:55.724 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@269997) - start
23:04:55.724 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.726 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.726 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.726 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:55.726 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.726 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.728 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.728 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.728 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.728 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.728 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.730 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.730 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:55.730 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:55.730 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:55.730 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.731 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.731 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.731 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=3) - start
23:04:55.731 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=3) - start
23:04:55.731 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:55.733 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=products, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@269997) - start
23:04:55.733 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.733 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.733 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.735 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=products) - start
23:04:55.735 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.735 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.735 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.735 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.736 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.736 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.736 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.736 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.736 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=sku_number) - start
23:04:55.738 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
23:04:55.738 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
23:04:55.738 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.738 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.738 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.739 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=4) - start
23:04:55.739 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=4) - start
23:04:55.739 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=products) - start
23:04:55.740 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@269997) - start
23:04:55.740 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.741 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.741 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.741 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:55.741 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.741 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.743 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.743 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.743 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.743 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
23:04:55.743 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.745 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.745 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=products, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]) - start
23:04:55.745 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:55.747 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:55.747 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - start
23:04:55.747 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - end - result=PRODUCTS
23:04:55.747 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.747 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.748 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@269997) - start
23:04:55.748 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)]) - start
23:04:55.748 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventory_items, object=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:55.750 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.750 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.750 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - start
23:04:55.750 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - end - result=INVENTORY_ITEMS
23:04:55.750 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[]) - start
23:04:55.752 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.752 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.752 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.752 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.752 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.754 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.754 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.754 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.754 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.754 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.756 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
23:04:55.756 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
23:04:55.756 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:55.756 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@269997) - start
23:04:55.756 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.758 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.758 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.758 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:55.758 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.758 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.760 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.760 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.760 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.760 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.760 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.761 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.761 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.761 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.761 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.761 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.763 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.763 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.763 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.763 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=2) - start
23:04:55.763 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=2) - start
23:04:55.765 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:55.765 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@269997) - start
23:04:55.765 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.765 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.766 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.766 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:55.766 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.767 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.767 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.768 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.769 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.769 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.769 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.769 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.770 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.771 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.773 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.773 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.774 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.774 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.774 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.774 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=3) - start
23:04:55.774 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=3) - start
23:04:55.874 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:55.874 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=inventory_items, attributes=org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy@269997) - start
23:04:55.874 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.874 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.875 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.875 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=inventory_items) - start
23:04:55.875 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.875 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.875 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.877 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.877 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.877 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.877 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.877 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.879 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
23:04:55.879 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=product_sku_number) - start
23:04:55.879 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=inventory_id) - start
23:04:55.879 [main] DEBUG o.d.dataset.AbstractTableMetaData - getColumnIndex(columnName=quantity) - start
23:04:55.879 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.880 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.880 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.880 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=4) - start
23:04:55.880 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=4) - start
23:04:55.880 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=inventory_items) - start
23:04:55.882 [main] DEBUG o.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
23:04:55.882 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
23:04:55.882 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.882 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.882 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
23:04:55.884 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.884 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.884 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventory_items, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]) - start
23:04:55.885 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:55.885 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:55.885 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - start
23:04:55.885 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - end - result=INVENTORY_ITEMS
23:04:55.885 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start
23:04:55.886 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[inventories, products, inventory_items], _tableMap={INVENTORY_ITEMS=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventory_items, columns=[(id, UNKNOWN, nullableUnknown), (product_sku_number, UNKNOWN, nullableUnknown), (inventory_id, UNKNOWN, nullableUnknown), (quantity, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4], INVENTORIES=org.dbunit.dataset.DefaultTable[_metaData=tableName=inventories, columns=[(id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], PRODUCTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=products, columns=[(sku_number, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]}, _caseSensitiveTableNames=false]
23:04:55.888 [main] DEBUG org.dbunit.AbstractDatabaseTester - setDataSet(dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
23:04:55.888 [main] DEBUG org.dbunit.DatabaseTestCase - getOperationListener() - start
23:04:55.888 [main] DEBUG org.dbunit.AbstractDatabaseTester - setOperationListener(operationListener=org.dbunit.DatabaseTestCase$1@701a27) - start
23:04:55.888 [main] DEBUG org.dbunit.AbstractDatabaseTester - onTearDown() - start
23:04:55.888 [main] DEBUG org.dbunit.AbstractDatabaseTester - executeOperation(operation=org.dbunit.operation.DeleteAllOperation@19b1de) - start
23:04:55.889 [main] DEBUG org.dbunit.JdbcDatabaseTester - getConnection() - start
23:04:55.889 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=connectionUrl, property=jdbc:mysql://127.0.0.1/orderingsystem_test) - start
23:04:55.897 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName= (dbIdentifierQuoteString=`)
23:04:55.897 [main] DEBUG o.dbunit.database.DatabaseConnection - Database connection info: 
	database product name=MySQL
	database version=5.5.2-m2-community
	database major version=5
	database minor version=5
	jdbc driver name=MySQL-AB JDBC Driver
	jdbc driver version=mysql-connector-java-5.1.16 ( Revision: ${bzr.revision-id} )
	jdbc driver major version=5
	jdbc driver minor version=1

23:04:55.994 [main] DEBUG o.dbunit.database.DatabaseConnection - validateSchema(validateStrict=false) - start
23:04:55.995 [main] WARN  o.dbunit.database.DatabaseConnection - The given schema '' does not exist.
23:04:55.995 [main] DEBUG org.dbunit.DefaultOperationListener - connectionCreated(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@1d95da8, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@193f6e2, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=null]) - start
23:04:55.995 [main] DEBUG org.dbunit.AbstractDatabaseTester - getDataSet() - start
23:04:55.995 [main] DEBUG o.d.operation.DeleteAllOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@1d95da8, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@193f6e2, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
23:04:55.996 [main] DEBUG o.d.d.AbstractDatabaseConnection - createDataSet() - start
23:04:55.996 [main] DEBUG o.d.d.s.PreparedStatementFactory - createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@1d95da8, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@193f6e2, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:56.000 [main] DEBUG o.d.d.s.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@1d95da8, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@193f6e2, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:56.004 [main] DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start
23:04:56.004 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
23:04:56.004 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
23:04:56.004 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:56.004 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:56.008 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:56.008 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:56.008 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:56.008 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:56.008 [main] DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start
23:04:56.013 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:56.013 [main] DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start
23:04:56.013 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:56.013 [main] DEBUG o.d.dataset.DefaultTableIterator - getTableMetaData() - start
23:04:56.013 [main] DEBUG o.d.dataset.DefaultTableIterator - getTable() - start
23:04:56.013 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=inventory_items) - start
23:04:56.014 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:56.014 [main] DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database...
23:04:56.016 [main] DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=MySQL
	database version=5.5.2-m2-community
	database major version=5
	database minor version=5
	jdbc driver name=MySQL-AB JDBC Driver
	jdbc driver version=mysql-connector-java-5.1.16 ( Revision: ${bzr.revision-id} )
	jdbc driver major version=5
	jdbc driver minor version=1

23:04:56.016 [main] DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=com.mysql.jdbc.JDBC4ResultSet@1e13e07
23:04:56.016 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@193f6e2, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:56.016 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:56.016 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=customers, escapePattern=null) - start
23:04:56.017 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=customers, object=null) - start
23:04:56.017 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=customers) - start
23:04:56.017 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=customers) - end - result=CUSTOMERS
23:04:56.019 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CUSTOMERS) - start
23:04:56.019 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CUSTOMERS) - end - result=CUSTOMERS
23:04:56.019 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@193f6e2, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:56.023 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:56.023 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=inventories, escapePattern=null) - start
23:04:56.023 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventories, object=null) - start
23:04:56.023 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:56.023 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:56.024 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - start
23:04:56.024 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORIES) - end - result=INVENTORIES
23:04:56.025 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@193f6e2, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:56.029 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:56.029 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=inventory_items, escapePattern=null) - start
23:04:56.029 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=inventory_items, object=null) - start
23:04:56.029 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:56.029 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:56.030 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - start
23:04:56.030 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=INVENTORY_ITEMS) - end - result=INVENTORY_ITEMS
23:04:56.030 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@193f6e2, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:56.035 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:56.035 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=order_items, escapePattern=null) - start
23:04:56.035 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=order_items, object=null) - start
23:04:56.035 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=order_items) - start
23:04:56.035 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=order_items) - end - result=ORDER_ITEMS
23:04:56.036 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDER_ITEMS) - start
23:04:56.036 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDER_ITEMS) - end - result=ORDER_ITEMS
23:04:56.036 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@193f6e2, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:56.041 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:56.041 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=orders, escapePattern=null) - start
23:04:56.041 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=orders, object=null) - start
23:04:56.041 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=orders) - start
23:04:56.041 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=orders) - end - result=ORDERS
23:04:56.042 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDERS) - start
23:04:56.042 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=ORDERS) - end - result=ORDERS
23:04:56.042 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@193f6e2, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}]) - start
23:04:56.046 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
23:04:56.046 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=products, escapePattern=null) - start
23:04:56.046 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - add(tableName=products, object=null) - start
23:04:56.046 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:56.046 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:56.047 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - start
23:04:56.047 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTS) - end - result=PRODUCTS
23:04:56.047 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:56.047 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:56.047 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:56.052 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:56.052 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=inventory_items (dbIdentifierQuoteString=`)
23:04:56.052 [main] DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'inventory_items' exists in schema '' ...
23:04:56.053 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=com.mysql.jdbc.JDBC4ResultSet@11946c2) - start
23:04:56.054 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - update(tableName=inventory_items, object=table=inventory_items, cols=[(id, INTEGER, noNulls), (product_sku_number, INTEGER, noNulls), (inventory_id, INTEGER, noNulls), (quantity, INTEGER, noNulls)], pk=[(id, INTEGER, noNulls)]) - start
23:04:56.061 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:56.061 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:56.157 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - start
23:04:56.157 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventory_items) - end - result=INVENTORY_ITEMS
23:04:56.157 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=, name=inventory_items, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@1d95da8, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@193f6e2, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:56.158 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:56.158 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=inventory_items, escapePattern=null) - start
23:04:56.158 [main] DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from inventory_items) - start
23:04:56.158 [main] DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from inventory_items
23:04:56.158 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=products) - start
23:04:56.159 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:56.159 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:56.159 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:56.159 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:56.159 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:56.164 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=products (dbIdentifierQuoteString=`)
23:04:56.164 [main] DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'products' exists in schema '' ...
23:04:56.165 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=com.mysql.jdbc.JDBC4ResultSet@6779e6) - start
23:04:56.165 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - update(tableName=products, object=table=products, cols=[(sku_number, INTEGER, noNulls), (name, VARCHAR, noNulls), (amount, DECIMAL, noNulls)], pk=[(sku_number, INTEGER, noNulls)]) - start
23:04:56.172 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:56.172 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:56.172 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - start
23:04:56.268 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=products) - end - result=PRODUCTS
23:04:56.268 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=, name=products, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@1d95da8, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@193f6e2, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:56.269 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:56.269 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=products, escapePattern=null) - start
23:04:56.269 [main] DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from products) - start
23:04:56.269 [main] DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from products
23:04:56.269 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=inventories) - start
23:04:56.270 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
23:04:56.270 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:56.270 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:56.270 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:56.270 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:56.274 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=inventories (dbIdentifierQuoteString=`)
23:04:56.274 [main] DEBUG o.d.database.DatabaseTableMetaData - Validating if table 'inventories' exists in schema '' ...
23:04:56.276 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=com.mysql.jdbc.JDBC4ResultSet@fced4) - start
23:04:56.276 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - update(tableName=inventories, object=table=inventories, cols=[(id, INTEGER, noNulls)], pk=[(id, INTEGER, noNulls)]) - start
23:04:56.282 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:56.282 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:56.282 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - start
23:04:56.379 [main] DEBUG o.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=inventories) - end - result=INVENTORIES
23:04:56.379 [main] DEBUG o.dbunit.operation.AbstractOperation - getQualifiedName(prefix=, name=inventories, connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@1d95da8, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@193f6e2, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:56.380 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
23:04:56.380 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=, name=inventories, escapePattern=null) - start
23:04:56.380 [main] DEBUG o.d.d.statement.SimpleStatement - addBatch(sql=delete from inventories) - start
23:04:56.380 [main] DEBUG o.d.operation.DeleteAllOperation - Added SQL: delete from inventories
23:04:56.380 [main] DEBUG o.d.d.statement.SimpleStatement - executeBatch() - start
23:04:56.381 [main] DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from inventory_items
23:04:56.475 [main] DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from products
23:04:56.490 [main] DEBUG o.d.d.statement.SimpleStatement - DbUnit SQL: delete from inventories
23:04:56.515 [main] DEBUG o.d.d.statement.SimpleStatement - clearBatch() - start
23:04:56.516 [main] DEBUG o.d.d.s.AbstractBatchStatement - close() - start
23:04:56.516 [main] DEBUG org.dbunit.DefaultOperationListener - operationTearDownFinished(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@1d95da8, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@193f6e2, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:56.586 [main] DEBUG org.dbunit.DefaultOperationListener - closeConnection(connection=org.dbunit.database.DatabaseConnection[schema=, connection=com.mysql.jdbc.JDBC4Connection@1d95da8, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@1f82982, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@193f6e2, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@e70e30], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@154864a, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@3c9217, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
23:04:56.587 [main] DEBUG o.dbunit.database.DatabaseConnection - close() - start
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
